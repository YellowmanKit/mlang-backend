{"version":3,"sources":["../../src/models/Query.js"],"names":["module","exports","getStatisticsByUser","userId","err","data","stat","value","userStudentProjects","userCards","userLangs","userFeaturedLangs","userProjects","userSubjects","userCourses","studentProjects","cards","langs","featuredLangs","projects","subjects","courses","featuredCount","langCharCount","langCharFreq","studentProjectsId","StudentProject","getByUser","cardsId","Card","getByStudentProjects","langsId","Lang","getByCards","featuredLangsId","projectsId","Project","subjectsId","Subject","getByProjects","coursesId","Course","getBySubjects","i","length","grade","txt","text","key","j","sortNumuriObject","getStatistics","schoolId","school","schoolTeachers","schoolStudents","schoolCourses","schoolSubjects","schoolProjects","schoolCards","schoolLangs","profiles","featured","School","findById","getBySchool","getByCourses","profilesId","Profile","getTeachers","getStudents","objectToSort","sortable","item","push","sort","a","b","objectToReturn"],"mappings":"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","file":"Query.js","sourcesContent":["import to from '../to';\r\nimport Profile from './Profile';\r\nimport User from './User';\r\nimport School from './School';\r\nimport Course from './Course';\r\nimport Subject from './Subject';\r\nimport Project from './Project';\r\nimport StudentProject from './StudentProject';\r\nimport Card from './Card';\r\nimport Lang from './Lang';\r\n\r\nmodule.exports.getStatisticsByUser = async (userId)=>{\r\n  let err, data;\r\n  var stat= {\r\n    value: 'ok',\r\n    userStudentProjects: [],\r\n    userCards: [],\r\n    userLangs: [],\r\n    userFeaturedLangs: [],\r\n    userProjects: [],\r\n    userSubjects: [],\r\n    userCourses: [],\r\n\r\n    studentProjects: [],\r\n    cards: [],\r\n    langs: [],\r\n    featuredLangs: [],\r\n    projects: [],\r\n    subjects: [],\r\n    courses: [],\r\n\r\n    featuredCount: 0,\r\n    langCharCount: 0,\r\n    langCharFreq: {}\r\n  };\r\n\r\n  let studentProjectsId = [];\r\n  [err, data, studentProjectsId] = await StudentProject.getByUser(userId);\r\n\r\n  stat['userStudentProjects'] = studentProjectsId;\r\n  stat['studentProjects'] = data;\r\n\r\n  let cardsId = [];\r\n  [err, data, cardsId] = await Card.getByStudentProjects(stat['studentProjects']);\r\n\r\n  stat['userCards'] = cardsId;\r\n  stat['cards'] = data;\r\n\r\n  let langsId = [];\r\n  [err, data, langsId] = await Lang.getByCards(stat['cards']);\r\n\r\n  stat['userLangs'] = langsId;\r\n  stat['langs'] = data;\r\n\r\n  let featuredLangsId = [];\r\n  [err, data, langsId] = await Lang.getByCards(stat['cards'], true);\r\n\r\n  stat['userFeaturedLangs'] = featuredLangsId;\r\n  stat['featuredLangs'] = data;\r\n\r\n  let projectsId = [];\r\n  [err, data, projectsId] = await Project.getByStudentProjects(stat['studentProjects']);\r\n\r\n  stat['userProjects'] = projectsId;\r\n  stat['projects'] = data;\r\n\r\n  let subjectsId = [];\r\n  [err, data, subjectsId] = await Subject.getByProjects(stat['projects']);\r\n\r\n  stat['userSubjects'] = subjectsId;\r\n  stat['subjects'] = data;\r\n\r\n  let coursesId = [];\r\n  [err, data, coursesId] = await Course.getBySubjects(stat['subjects']);\r\n\r\n  stat['userCourses'] = coursesId;\r\n  stat['courses'] = data;\r\n\r\n  for(var i=0;i<stat.cards.length;i++){\r\n    if(stat.cards[i].grade === 'featured'){ stat.featuredCount++; }\r\n  }\r\n\r\n  for(var i=0;i<stat.featuredLangs.length;i++){\r\n    const txt = stat.featuredLangs[i].text;\r\n    const key = stat.featuredLangs[i].key;\r\n    stat.langCharCount += txt.length;\r\n    for(var j=0;j<txt.length;j++){\r\n      if(!stat.langCharFreq[key]){ stat.langCharFreq[key] = {}; }\r\n      if(!stat.langCharFreq[key][txt[j]]){ stat.langCharFreq[key][txt[j]] = 0; }\r\n      stat.langCharFreq[key][txt[j]]++;\r\n    }\r\n    stat.langCharFreq[key] = sortNumuriObject(stat.langCharFreq[key]);\r\n  }\r\n\r\n  //console.log(stat);\r\n  return [err, stat];\r\n}\r\n\r\nmodule.exports.getStatistics = async (schoolId)=>{\r\n  let err, data, school;\r\n  var stat= {\r\n    schoolTeachers: [],\r\n    schoolStudents: [],\r\n    schoolCourses: [],\r\n    schoolSubjects: [],\r\n    schoolProjects: [],\r\n    schoolCards: [],\r\n    schoolLangs: [],\r\n    profiles: [],\r\n    courses: [],\r\n    subjects: [],\r\n    projects: [],\r\n    cards: [],\r\n    langs: [],\r\n    featured: 0\r\n  };\r\n\r\n  [err, school] = await to(School.findById(schoolId));\r\n  let coursesId = [];\r\n  [err, data, coursesId] = await Course.getBySchool(school);\r\n\r\n  stat['schoolCourses'] = coursesId;\r\n  stat['courses'] = data;\r\n\r\n  let subjectsId = [];\r\n  [err, data, subjectsId] = await Subject.getByCourses(data, true);\r\n\r\n  stat['schoolSubjects'] = subjectsId;\r\n  stat['subjects'] = data;\r\n\r\n  let projectsId = [];\r\n  [err, data, projectsId] = await Project.getBySubjects(data);\r\n\r\n  stat['schoolProjects'] = projectsId;\r\n  stat['projects'] = data;\r\n\r\n  let cardsId = [];\r\n  let featured = 0;\r\n  [err, data, cardsId, featured] = await Card.getByProjects(data);\r\n\r\n  stat['schoolCards'] = cardsId;\r\n  stat['cards'] = data;\r\n  stat['featured'] = featured;\r\n\r\n  let langsId = [];\r\n  [err, data, langsId] = await Lang.getByCards(data);\r\n\r\n  stat['schoolLangs'] = langsId;\r\n  stat['langs'] = data;\r\n\r\n  let profilesId = [];\r\n  [err, data, profilesId] = await Profile.getTeachers(schoolId);\r\n\r\n  stat['schoolTeachers'] = profilesId;\r\n  stat['profiles'] = data;\r\n\r\n  [err, data, profilesId] = await Profile.getStudents(stat.schoolCourses);\r\n\r\n  stat['schoolStudents'] = profilesId;\r\n  stat['profiles'] = [...stat['profiles'], ...data];\r\n\r\n  return [err, stat];\r\n}\r\n\r\nvar sortNumuriObject = (objectToSort) =>{\r\n  var sortable = [];\r\n  for (var item in objectToSort){ sortable.push([item, objectToSort[item]]); }\r\n  sortable.sort((a, b)=> { return b[1] - a[1]; });\r\n\r\n  var objectToReturn = {};\r\n  for (var i = 0;i<sortable.length;i++){  objectToReturn[sortable[i][0]] = sortable[i][1] }\r\n\r\n  return objectToReturn;\r\n}\r\n"]}