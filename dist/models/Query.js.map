{"version":3,"sources":["../../src/models/Query.js"],"names":["module","exports","getStatisticsByUser","userId","err","data","stat","value","userStudentProjects","userCards","userLangs","userProjects","userSubjects","userCourses","studentProjects","cards","langs","projects","subjects","courses","featuredCount","langCharCount","langCharFreq","studentProjectsId","StudentProject","getByUser","cardsId","Card","getByStudentProjects","langsId","Lang","getByCards","projectsId","Project","subjectsId","Subject","getByProjects","coursesId","Course","getBySubjects","i","length","grade","txt","text","key","j","sortNumuriObject","console","log","getStatistics","schoolId","school","schoolTeachers","schoolStudents","schoolCourses","schoolSubjects","schoolProjects","schoolCards","schoolLangs","profiles","featured","School","findById","getBySchool","getByCourses","profilesId","Profile","getTeachers","getStudents","objectToSort","sortable","item","push","sort","a","b","objectToReturn"],"mappings":"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","file":"Query.js","sourcesContent":["import to from '../to';\r\nimport Profile from './Profile';\r\nimport User from './User';\r\nimport School from './School';\r\nimport Course from './Course';\r\nimport Subject from './Subject';\r\nimport Project from './Project';\r\nimport StudentProject from './StudentProject';\r\nimport Card from './Card';\r\nimport Lang from './Lang';\r\n\r\nmodule.exports.getStatisticsByUser = async (userId)=>{\r\n  let err, data;\r\n  var stat= {\r\n    value: 'ok',\r\n    userStudentProjects: [],\r\n    userCards: [],\r\n    userLangs: [],\r\n    userProjects: [],\r\n    userSubjects: [],\r\n    userCourses: [],\r\n\r\n    studentProjects: [],\r\n    cards: [],\r\n    langs: [],\r\n    projects: [],\r\n    subjects: [],\r\n    courses: [],\r\n\r\n    featuredCount: 0,\r\n    langCharCount: 0,\r\n    langCharFreq: {}\r\n  };\r\n\r\n  let studentProjectsId = [];\r\n  [err, data, studentProjectsId] = await StudentProject.getByUser(userId);\r\n\r\n  stat['userStudentProjects'] = studentProjectsId;\r\n  stat['studentProjects'] = data;\r\n\r\n  let cardsId = [];\r\n  [err, data, cardsId] = await Card.getByStudentProjects(stat['studentProjects']);\r\n\r\n  stat['userCards'] = cardsId;\r\n  stat['cards'] = data;\r\n\r\n  let langsId = [];\r\n  [err, data, langsId] = await Lang.getByCards(stat['cards']);\r\n\r\n  stat['userLangs'] = langsId;\r\n  stat['langs'] = data;\r\n\r\n  let projectsId = [];\r\n  [err, data, projectsId] = await Project.getByStudentProjects(stat['studentProjects']);\r\n\r\n  stat['userProjects'] = projectsId;\r\n  stat['projects'] = data;\r\n\r\n  let subjectsId = [];\r\n  [err, data, subjectsId] = await Subject.getByProjects(stat['projects']);\r\n\r\n  stat['userSubjects'] = subjectsId;\r\n  stat['subjects'] = data;\r\n\r\n  let coursesId = [];\r\n  [err, data, coursesId] = await Course.getBySubjects(stat['subjects']);\r\n\r\n  stat['userCourses'] = coursesId;\r\n  stat['courses'] = data;\r\n\r\n  for(var i=0;i<stat.cards.length;i++){\r\n    if(stat.cards[i].grade === 'featured'){ stat.featuredCount++; }\r\n  }\r\n\r\n  for(var i=0;i<stat.langs.length;i++){\r\n    const txt = stat.langs[i].text;\r\n    const key = stat.langs[i].key;\r\n    stat.langCharCount += txt.length;\r\n    for(var j=0;j<txt.length;j++){\r\n      if(!stat.langCharFreq[key]){ stat.langCharFreq[key] = {}; }\r\n      if(!stat.langCharFreq[key][txt[j]]){ stat.langCharFreq[key][txt[j]] = 0; }\r\n      stat.langCharFreq[key][txt[j]]++;\r\n    }\r\n    stat.langCharFreq[key] = sortNumuriObject(stat.langCharFreq[key]);\r\n  }\r\n\r\n\r\n\r\n  console.log(stat);\r\n  return [err, stat];\r\n}\r\n\r\nmodule.exports.getStatistics = async (schoolId)=>{\r\n  let err, data, school;\r\n  var stat= {\r\n    schoolTeachers: [],\r\n    schoolStudents: [],\r\n    schoolCourses: [],\r\n    schoolSubjects: [],\r\n    schoolProjects: [],\r\n    schoolCards: [],\r\n    schoolLangs: [],\r\n    profiles: [],\r\n    courses: [],\r\n    subjects: [],\r\n    projects: [],\r\n    cards: [],\r\n    langs: [],\r\n    featured: 0\r\n  };\r\n\r\n  [err, school] = await to(School.findById(schoolId));\r\n  let coursesId = [];\r\n  [err, data, coursesId] = await Course.getBySchool(school);\r\n\r\n  stat['schoolCourses'] = coursesId;\r\n  stat['courses'] = data;\r\n\r\n  let subjectsId = [];\r\n  [err, data, subjectsId] = await Subject.getByCourses(data, true);\r\n\r\n  stat['schoolSubjects'] = subjectsId;\r\n  stat['subjects'] = data;\r\n\r\n  let projectsId = [];\r\n  [err, data, projectsId] = await Project.getBySubjects(data);\r\n\r\n  stat['schoolProjects'] = projectsId;\r\n  stat['projects'] = data;\r\n\r\n  let cardsId = [];\r\n  let featured = 0;\r\n  [err, data, cardsId, featured] = await Card.getByProjects(data);\r\n\r\n  stat['schoolCards'] = cardsId;\r\n  stat['cards'] = data;\r\n  stat['featured'] = featured;\r\n\r\n  let langsId = [];\r\n  [err, data, langsId] = await Lang.getByCards(data);\r\n\r\n  stat['schoolLangs'] = langsId;\r\n  stat['langs'] = data;\r\n\r\n  let profilesId = [];\r\n  [err, data, profilesId] = await Profile.getTeachers(schoolId);\r\n\r\n  stat['schoolTeachers'] = profilesId;\r\n  stat['profiles'] = data;\r\n\r\n  [err, data, profilesId] = await Profile.getStudents(stat.schoolCourses);\r\n\r\n  stat['schoolStudents'] = profilesId;\r\n  stat['profiles'] = [...stat['profiles'], ...data];\r\n\r\n  return [err, stat];\r\n}\r\n\r\nvar sortNumuriObject = (objectToSort) =>{\r\n  var sortable = [];\r\n  for (var item in objectToSort){ sortable.push([item, objectToSort[item]]); }\r\n  sortable.sort((a, b)=> { return b[1] - a[1]; });\r\n\r\n  var objectToReturn = {};\r\n  for (var i = 0;i<sortable.length;i++){  objectToReturn[sortable[i][0]] = sortable[i][1] }\r\n\r\n  return objectToReturn;\r\n}\r\n"]}