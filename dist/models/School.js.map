{"version":3,"sources":["../../src/models/School.js"],"names":["ObjectId","mongoose","Schema","Types","schoolSchema","admin","type","required","icon","String","name","description","default","createdAt","Date","code","joinedTeachers","School","module","exports","model","leaveSchool","data","cb","err","schoolToLeave","updatedProfile","findOneAndUpdate","$pull","userId","new","Profile","belongTo","joinedSchools","_id","joinSchool","schoolToJoin","$push","addSchool","newSchool","school","newCode","i","randomString","generate","length","charset","findOne","create","console","log"],"mappings":"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","file":"School.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport randomString from'randomstring';\r\nimport to from'../to';\r\n\r\nimport Profile from './Profile';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar schoolSchema = mongoose.Schema({\r\n  admin: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  code: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  joinedTeachers: [ObjectId]\r\n})\r\n\r\nvar School = module.exports = mongoose.model('school',schoolSchema);\r\n\r\nmodule.exports.leaveSchool = async (data, cb)=>{\r\n  let err, schoolToLeave, updatedProfile;\r\n\r\n  [err, schoolToLeave] = await to(School.findOneAndUpdate({code: data.code}, { $pull: {\r\n    joinedTeachers: data.userId\r\n  }}, {new: true}))\r\n  if(err || schoolToLeave === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $pull: {\r\n    joinedSchools: schoolToLeave._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  cb('success', schoolToLeave, updatedProfile)\r\n}\r\n\r\nmodule.exports.joinSchool = async (data, cb)=>{\r\n  let err, schoolToJoin, updatedProfile;\r\n\r\n  [err, schoolToJoin] = await to(School.findOneAndUpdate({code: data.code}, { $push: {\r\n    joinedTeachers: data.userId\r\n  }}, {new: true}))\r\n  if(err || schoolToJoin === null){ cb('failed'); };\r\n\r\n  [err, updatedProfile] = await to(Profile.findOneAndUpdate({belongTo: data.userId}, { $push: {\r\n    joinedSchools: schoolToJoin._id\r\n  }}, {new: true}))\r\n  if(err || updatedProfile === null){ cb('failed'); };\r\n\r\n  cb('success', schoolToJoin, updatedProfile)\r\n}\r\n\r\nmodule.exports.addSchool = async (newSchool, cb)=>{\r\n  let err, school;\r\n\r\n  var newCode = '';\r\n  for(var i=0;i<99;i++){\r\n    newCode = randomString.generate({\r\n      length: 5,\r\n      charset: 'ABCDEFGHJKMNOPQRSTUVWXYZ1234567890'\r\n    });\r\n\r\n    [err, school] = await to(School.findOne({code: newCode}));\r\n    if(!err && school === null){ break; };\r\n  }\r\n\r\n  newSchool['code'] = newCode;\r\n\r\n  [err, school] = await to(School.create(newSchool));\r\n  if(err){ cb('failed'); console.log(err); return; }\r\n\r\n  //console.log(School)\r\n  cb('success', school)\r\n}\r\n"]}