{"version":3,"sources":["../../src/models/Project.js"],"names":["ObjectId","mongoose","Schema","Types","projectSchema","subject","type","required","icon","String","title","description","default","createdAt","Date","endDate","studentProjects","Project","module","exports","model","getByStudentProjects","err","project","projectsId","projects","i","length","findById","push","_id","getBySubjects","subjects"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,gBAAgBH,mBAASC,MAAT,CAAgB;AAClCG,WAAS;AACPC,UAAMN,QADC;AAEPO,cAAU;AAFH,GADyB;AAKlCC,QAAM;AACJF,UAAMG;AADF,GAL4B;AAQlCC,SAAO;AACLJ,UAAMG,MADD;AAELF,cAAU;AAFL,GAR2B;AAYlCI,eAAa;AACXL,UAAMG,MADK;AAEXG,aAAS;AAFE,GAZqB;AAgBlCC,aAAW;AACTP,UAAMQ;AADG,GAhBuB;AAmBlCC,WAAS;AACPT,UAAMQ,IADC;AAEPF,aAAS,IAAIE,IAAJ;AAFF,GAnByB;AAuBlCE,mBAAiB,CAAChB,QAAD;AAvBiB,CAAhB,CAApB;;AA0BA,IAAIiB,UAAUC,OAAOC,OAAP,GAAiBlB,mBAASmB,KAAT,CAAe,SAAf,EAAyBhB,aAAzB,CAA/B;;AAEAc,OAAOC,OAAP,CAAeE,oBAAf;AAAA,qEAAsC,iBAAOL,eAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAChCM,eADgC,WAC3BC,OAD2B;AAEhCC,sBAFgC,GAEnB,EAFmB;AAGhCC,oBAHgC,GAGrB,EAHqB;AAK5BC,aAL4B,GAK1B,CAL0B;;AAAA;AAAA,kBAKxBA,IAAEV,gBAAgBW,MALM;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMX,kBAAGV,QAAQW,QAAR,CAAiBZ,gBAAgBU,CAAhB,EAAmBH,OAApC,CAAH,CANW;;AAAA;AAAA;AAAA;AAMjCD,eANiC;AAM5BC,mBAN4B;;AAAA,iBAO/BD,GAP+B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAQlCG,qBAASI,IAAT,CAAcN,OAAd;AACAC,uBAAWK,IAAX,CAAgBN,QAAQO,GAAxB;;AATkC;AAKCJ,eALD;AAAA;AAAA;;AAAA;AAAA,6CAY7B,CAACJ,GAAD,EAAMG,QAAN,EAAgBD,UAAhB,CAZ6B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtC;;AAAA;AAAA;AAAA;AAAA;;AAeAN,OAAOC,OAAP,CAAeY,aAAf;AAAA,sEAA+B,kBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBV,eADyB,WACpBC,OADoB;AAEzBC,sBAFyB,GAEZ,EAFY;AAGzBC,oBAHyB,GAGd,EAHc;;;AAK7B,iBAAQC,CAAR,GAAU,CAAV,EAAYA,IAAEM,SAASL,MAAvB,EAA8BD,GAA9B,EAAkC;AAChCF,wDAAiBA,UAAjB,sBAAgCQ,SAASN,CAAT,EAAYD,QAA5C;AACD;;AAEOC,aATqB,GASnB,CATmB;;AAAA;AAAA,kBASjBA,IAAEF,WAAWG,MATI;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAUJ,kBAAGV,QAAQW,QAAR,CAAiBJ,WAAWE,CAAX,CAAjB,CAAH,CAVI;;AAAA;AAAA;AAAA;AAU1BJ,eAV0B;AAUrBC,mBAVqB;;AAW3BE,qBAASI,IAAT,CAAcN,OAAd;;AAX2B;AASGG,eATH;AAAA;AAAA;;AAAA;AAAA,8CActB,CAACJ,GAAD,EAAMG,QAAN,EAAgBD,UAAhB,CAdsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA","file":"Project.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport Model from './Model';\r\nimport to from '../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar projectSchema = mongoose.Schema({\r\n  subject: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  createdAt: {\r\n    type: Date\r\n  },\r\n  endDate: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  studentProjects: [ObjectId]\r\n})\r\n\r\nvar Project = module.exports = mongoose.model('project',projectSchema);\r\n\r\nmodule.exports.getByStudentProjects = async (studentProjects) =>{\r\n  let err, project;\r\n  let projectsId = [];\r\n  let projects = [];\r\n\r\n  for(var i=0;i<studentProjects.length;i++){\r\n    [err, project] = await to(Project.findById(studentProjects[i].project));\r\n    if(err){ continue; }\r\n    projects.push(project);\r\n    projectsId.push(project._id);\r\n  }\r\n\r\n  return [err, projects, projectsId];\r\n}\r\n\r\nmodule.exports.getBySubjects = async (subjects) =>{\r\n  let err, project;\r\n  let projectsId = [];\r\n  let projects = [];\r\n\r\n  for(var i=0;i<subjects.length;i++){\r\n    projectsId = [...projectsId, ...subjects[i].projects];\r\n  }\r\n\r\n  for(var i=0;i<projectsId.length;i++){\r\n    [err, project] = await to(Project.findById(projectsId[i]));\r\n    projects.push(project)\r\n  }\r\n\r\n  return [err, projects, projectsId];\r\n}\r\n"]}