{"version":3,"sources":["../../src/models/Lang.js"],"names":["ObjectId","mongoose","Schema","Types","langSchema","card","type","required","key","String","text","audio","Lang","module","exports","model","getByCards","cards","featuredOnly","err","lang","langsId","langs","i","length","grade","findById"],"mappings":";;;;AAAA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,aAAaH,mBAASC,MAAT,CAAgB;AAC/BG,QAAM;AACJC,UAAMN,QADF;AAEJO,cAAU;AAFN,GADyB;AAK/BC,OAAK;AACHF,UAAMG,MADH;AAEHF,cAAU;AAFP,GAL0B;AAS/BG,QAAM;AACJJ,UAAMG;AADF,GATyB;AAY/BE,SAAO;AACLL,UAAMG;AADD;AAZwB,CAAhB,CAAjB;;AAiBA,IAAIG,OAAOC,OAAOC,OAAP,GAAiBb,mBAASc,KAAT,CAAe,MAAf,EAAuBX,UAAvB,CAA5B;;AAEAS,OAAOC,OAAP,CAAeE,UAAf;AAAA,qEAA4B,iBAAOC,KAAP,EAAcC,YAAd;AAAA;;AAAA;AAAA;AAAA;AAAA;AACtBC,eADsB,WACjBC,IADiB;AAEtBC,mBAFsB,GAEZ,EAFY;AAGtBC,iBAHsB,GAGd,EAHc;AAKlBC,aALkB,GAKhB,CALgB;;AAAA;AAAA,kBAKdA,IAAEN,MAAMO,MALM;AAAA;AAAA;AAAA;;AAAA,kBAMrBN,gBAAgBD,MAAMM,CAAN,EAASE,KAAT,KAAmB,UANd;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAOxBJ,mDAAcA,OAAd,sBAA0BJ,MAAMM,CAAN,EAASD,KAAnC;;AAPwB;AAKCC,eALD;AAAA;AAAA;;AAAA;AAUlBA,aAVkB,GAUhB,CAVgB;;AAAA;AAAA,kBAUdA,IAAEF,QAAQG,MAVI;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAWJ,kBAAGZ,KAAKc,QAAL,CAAcL,QAAQE,CAAR,CAAd,CAAH,CAXI;;AAAA;AAAA;AAAA;AAWvBJ,eAXuB;AAWlBC,gBAXkB;;AAYxBE,iDAAYA,KAAZ,IAAmBF,IAAnB;;AAZwB;AAUGG,eAVH;AAAA;AAAA;;AAAA;AAAA,6CAenB,CAACJ,GAAD,EAAMG,KAAN,EAAaD,OAAb,CAfmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA5B;;AAAA;AAAA;AAAA;AAAA","file":"Lang.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport to from'../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar langSchema = mongoose.Schema({\r\n  card: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  key: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  text: {\r\n    type: String\r\n  },\r\n  audio: {\r\n    type: String\r\n  }\r\n})\r\n\r\nvar Lang = module.exports = mongoose.model('lang', langSchema);\r\n\r\nmodule.exports.getByCards = async (cards, featuredOnly)=>{\r\n  let err, lang;\r\n  let langsId = [];\r\n  let langs = [];\r\n\r\n  for(var i=0;i<cards.length;i++){\r\n    if(featuredOnly && cards[i].grade !== 'featured'){ continue; }\r\n    langsId = [...langsId, ...cards[i].langs];\r\n  }\r\n\r\n  for(var i=0;i<langsId.length;i++){\r\n    [err, lang] = await to(Lang.findById(langsId[i]));\r\n    langs = [...langs, lang];\r\n  }\r\n\r\n  return [err, langs, langsId];\r\n}\r\n"]}