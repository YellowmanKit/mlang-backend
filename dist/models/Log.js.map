{"version":3,"sources":["../../src/models/Log.js"],"names":["ObjectId","mongoose","Schema","Types","logSchema","createdAt","type","Date","required","String","user","Log","module","exports","model","getMultipleByProfiles","profiles","users","i","length","belongTo","find","$in","err","data","createLoginLog","userId","findOne","sort","log","Model","deltaMinute","create"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,YAAYH,mBAASC,MAAT,CAAgB;AAC9BG,aAAW;AACTC,UAAMC,IADG;AAETC,cAAU;AAFD,GADmB;AAK9BF,QAAM;AACJA,UAAMG,MADF;AAEJD,cAAU;AAFN,GALwB;AAS9BE,QAAM;AACJJ,UAAMN,QADF;AAEJQ,cAAU;AAFN;AATwB,CAAhB,CAAhB;;AAeA,IAAIG,MAAMC,OAAOC,OAAP,GAAiBZ,mBAASa,KAAT,CAAe,KAAf,EAAsBV,SAAtB,CAA3B;;AAEAQ,OAAOC,OAAP,CAAeE,qBAAf;AAAA,qEAAuC,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEjCC,iBAFiC,GAEzB,EAFyB;;AAGrC,iBAAQC,CAAR,GAAU,CAAV,EAAYA,IAAEF,SAASG,MAAvB,EAA8BD,GAA9B,EAAkC;AAChCD,mDAAYA,KAAZ,IAAmBD,SAASE,CAAT,EAAYE,QAA/B;AACD;AALoC;AAAA,mBAMjB,kBAAGT,IAAIU,IAAJ,CAAS,EAAEX,MAAM,EAAEY,KAAKL,KAAP,EAAR,EAAT,CAAH,CANiB;;AAAA;AAAA;AAAA;AAMpCM,eANoC;AAM/BC,gBAN+B;AAAA,6CAO9B,CAACD,GAAD,EAAMC,IAAN,CAP8B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvC;;AAAA;AAAA;AAAA;AAAA;;AAUAZ,OAAOC,OAAP,CAAeY,cAAf;AAAA,sEAAgC,kBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEX,kBAAGf,IAAIgB,OAAJ,CAAY,EAAEjB,MAAMgB,MAAR,EAAiBpB,MAAM,OAAvB,EAAZ,EAA8C,IAA9C,EAAoD,EAACsB,MAAM,EAACvB,WAAW,CAAC,CAAb,EAAP,EAApD,CAAH,CAFW;;AAAA;AAAA;AAAA;AAE7BkB,eAF6B;AAExBM,eAFwB;;AAAA,iBAG3BN,GAH2B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,iBAI3BM,GAJ2B;AAAA;AAAA;AAAA;;AAAA,kBAIlBC,gBAAMC,WAAN,CAAkB,IAAIxB,IAAJ,EAAlB,EAA8BsB,IAAIxB,SAAlC,IAA+C,EAJ7B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAK9BM,gBAAIqB,MAAJ,CAAW,EAAC1B,MAAM,OAAP,EAAgBI,MAAMgB,MAAtB,EAA8BrB,WAAW,IAAIE,IAAJ,EAAzC,EAAX;;AAL8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhC;;AAAA;AAAA;AAAA;AAAA","file":"Log.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport to from'../to';\r\nimport Model from './Model';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar logSchema = mongoose.Schema({\r\n  createdAt: {\r\n    type: Date,\r\n    required: true\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  user: {\r\n    type: ObjectId,\r\n    required: true\r\n  }\r\n})\r\n\r\nvar Log = module.exports = mongoose.model('log', logSchema);\r\n\r\nmodule.exports.getMultipleByProfiles = async (profiles)=>{\r\n  var err, data;\r\n  var users = [];\r\n  for(var i=0;i<profiles.length;i++){\r\n    users = [...users, profiles[i].belongTo];\r\n  }\r\n  [err, data] = await to(Log.find({ user: { $in: users } }));\r\n  return [err, data];\r\n}\r\n\r\nmodule.exports.createLoginLog = async (userId)=>{\r\n  var err, log;\r\n  [err, log] = await to(Log.findOne({ user: userId , type: 'login' }, null, {sort: {createdAt: -1 }}));\r\n  if(err){ return; }\r\n  if(log){ if(Model.deltaMinute(new Date(), log.createdAt) < 60){ return; } }\r\n  Log.create({type: 'login', user: userId, createdAt: new Date()});\r\n}\r\n"]}