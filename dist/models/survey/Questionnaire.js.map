{"version":3,"sources":["../../../src/models/survey/Questionnaire.js"],"names":["ObjectId","mongoose","Schema","Types","questionaireSchema","title","type","String","required","author","createdAt","Date","published","Boolean","questions","Questionnaire","module","exports","model","getByPublishes","publishes","quests","questsId","i","length","findOne","_id","questionnaire","err","quest","getByAuthor","userId","find","push","edit","data","editQuestions","newEditQuestions","questionsId","options","j","name","Question","findOneAndUpdate","new","question","create","newTitle","add"],"mappings":"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","file":"Questionnaire.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport Model from '../Model';\r\nimport to from '../../to';\r\n\r\nimport Question from './Question';\r\nimport Publish from './Publish';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar questionaireSchema = mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  author: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  createdAt: {\r\n    type: Date\r\n  },\r\n  published: {\r\n    type: Boolean\r\n  },\r\n  questions: [ObjectId]\r\n})\r\n\r\nvar Questionnaire = module.exports = mongoose.model('questionnaire',questionaireSchema);\r\n\r\nmodule.exports.getByPublishes = async (publishes)=>{\r\n  var err, quest;\r\n  var quests = [];\r\n  var questsId = [];\r\n\r\n  for(var i=0;i<publishes.length;i++){\r\n    [err, quest] = await to(Questionnaire.findOne({ _id: publishes[i].questionnaire }));\r\n    quests = [...quests, quest];\r\n    questsId = [...questsId, quest._id];\r\n  }\r\n  return [err, quests, questsId];\r\n}\r\n\r\nmodule.exports.getByAuthor = async (userId)=>{\r\n  var err, quests;\r\n  var questsId = [];\r\n\r\n  [err, quests] = await to(Questionnaire.find({ author: userId }));\r\n\r\n  for(var i=0;i<quests.length;i++){ questsId.push(quests[i]._id); }\r\n\r\n  return [err, quests, questsId];\r\n}\r\n\r\nmodule.exports.edit = async (data)=>{\r\n  const editQuestions = data.newEditQuestions;\r\n  var err, question, questionnaire;\r\n  var questions = [];\r\n  var questionsId = [];\r\n\r\n  for(var i=0;i<editQuestions.length;i++){\r\n    var options = [];\r\n    for(var j=0;j<editQuestions[i].options.length;j++){\r\n      options.push(editQuestions[i].options[j].name)\r\n    }\r\n    if(editQuestions[i]._id){\r\n      [err, question] = await to(Question.findOneAndUpdate(\r\n        { _id: editQuestions[i]._id, },\r\n        { title: editQuestions[i].title, type: editQuestions[i].type, options: options},\r\n        { new: true }\r\n      ));\r\n    }else{\r\n      [err, question] = await to(Question.create({ title: editQuestions[i].title, type: editQuestions[i].type, options: options}));\r\n    }\r\n    questions.push(question);\r\n    questionsId.push(question._id);\r\n  }\r\n  [err, questionnaire] = await to(Questionnaire.findOneAndUpdate(\r\n    { _id: data.questionnaire._id, },\r\n    {title: data.newTitle, questions: questionsId},\r\n    { new: true }\r\n  ));\r\n\r\n  return [err, questionnaire, questions];\r\n}\r\n\r\nmodule.exports.add = async (data)=>{\r\n  const editQuestions = data.editQuestions;\r\n  var err, question, questionnaire;\r\n  var questions = [];\r\n  var questionsId = [];\r\n\r\n  for(var i=0;i<editQuestions.length;i++){\r\n    var options = [];\r\n    for(var j=0;j<editQuestions[i].options.length;j++){\r\n      options.push(editQuestions[i].options[j].name)\r\n    }\r\n    [err, question] = await to(Question.create({ title: editQuestions[i].title, type: editQuestions[i].type, options: options}));\r\n    questions.push(question);\r\n    questionsId.push(question._id);\r\n  }\r\n  [err, questionnaire] = await to(Questionnaire.create({title: data.title, author: data.author, questions: questionsId, createdAt: new Date()}));\r\n\r\n  return [err, questionnaire, questions];\r\n}\r\n"]}