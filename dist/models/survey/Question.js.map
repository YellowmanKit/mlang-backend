{"version":3,"sources":["../../../src/models/survey/Question.js"],"names":["ObjectId","mongoose","Schema","Types","questionSchema","title","type","String","required","options","Question","module","exports","model","getByQuestionnaires","questionnaires","questions","questionsId","i","length","find","_id","$in","err","data","key","push","j"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,iBAAiBH,mBAASC,MAAT,CAAgB;AACnCG,SAAO;AACLC,UAAMC,MADD;AAELC,cAAU;AAFL,GAD4B;AAKnCF,QAAM;AACJA,UAAMC,MADF;AAEJC,cAAU;AAFN,GAL6B;AASnCC,WAAS,CAACF,MAAD;AAT0B,CAAhB,CAArB;;AAYA,IAAIG,WAAWC,OAAOC,OAAP,GAAiBX,mBAASY,KAAT,CAAe,UAAf,EAA0BT,cAA1B,CAAhC;;AAEAO,OAAOC,OAAP,CAAeE,mBAAf;AAAA,qEAAqC,iBAAOC,cAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAE/BC,qBAF+B,GAEnB,EAFmB;AAG/BC,uBAH+B,GAGjB,EAHiB;AAK3BC,aAL2B,GAKzB,CALyB;;AAAA;AAAA,kBAKvBA,IAAEH,eAAeI,MALM;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMb,kBAAGT,SAASU,IAAT,CAAc,EAAEC,KAAK,EAAEC,KAAKP,eAAeG,CAAf,EAAkBF,SAAzB,EAAP,EAAd,CAAH,CANa;;AAAA;AAAA;AAAA;AAMhCO,eANgC;AAM3BC,gBAN2B;;AAOjC,iBAAQC,GAAR,IAAeD,IAAf,EAAoB;AAClBR,wBAAUU,IAAV,CAAeF,KAAKC,GAAL,CAAf;AACD;;AATgC;AAKCP,eALD;AAAA;AAAA;;AAAA;;AAYnC,iBAAQS,CAAR,GAAU,CAAV,EAAYA,IAAEX,UAAUG,MAAxB,EAA+BQ,GAA/B,EAAmC;AACjCV,0BAAYS,IAAZ,CAAiBV,UAAUW,CAAV,EAAaN,GAA9B;AACD;;AAdkC,6CAgB5B,CAACE,GAAD,EAAMP,SAAN,EAAiBC,WAAjB,CAhB4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArC;;AAAA;AAAA;AAAA;AAAA","file":"Question.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport Model from '../Model';\r\nimport to from '../../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar questionSchema = mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  options: [String]\r\n})\r\n\r\nvar Question = module.exports = mongoose.model('question',questionSchema);\r\n\r\nmodule.exports.getByQuestionnaires = async (questionnaires)=>{\r\n  var err, data;\r\n  var questions = [];\r\n  var questionsId = [];\r\n\r\n  for(var i=0;i<questionnaires.length;i++){\r\n    [err, data] = await to(Question.find({ _id: { $in: questionnaires[i].questions }}));\r\n    for(var key in data){\r\n      questions.push(data[key]);\r\n    }\r\n  }\r\n\r\n  for(var j=0;j<questions.length;j++){\r\n    questionsId.push(questions[j]._id);\r\n  }\r\n\r\n  return [err, questions, questionsId];\r\n}\r\n"]}