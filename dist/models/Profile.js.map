{"version":3,"sources":["../../src/models/Profile.js"],"names":["ObjectId","mongoose","Schema","Types","profileSchema","belongTo","type","required","icon","String","name","default","description","joinedSchools","joinedCourses","cardCount","Number","featuredCount","lastLogin","Date","Profile","module","exports","model","getByStudentProjects","studentProjects","err","profile","usersId","profilesId","profiles","i","length","student","findOne","push","_id","getStudentsByCoursesId","coursesId","find","$in","getTeachersBySchool","schoolId"],"mappings":"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","file":"Profile.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport to from'../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar profileSchema = mongoose.Schema({\r\n  belongTo: {\r\n    type: ObjectId,\r\n    required: true\r\n  },\r\n  icon: {\r\n    type: String\r\n  },\r\n  name: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  description: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  joinedSchools: [ObjectId],\r\n  joinedCourses: [ObjectId],\r\n\r\n  cardCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  featuredCount: {\r\n    type: Number,\r\n    default: 0\r\n  },\r\n  lastLogin: {\r\n    type: Date\r\n  }\r\n})\r\n\r\nvar Profile = module.exports = mongoose.model('profile',profileSchema);\r\n\r\nmodule.exports.getByStudentProjects = async (studentProjects) =>{\r\n  let err, profile;\r\n  let usersId = [];\r\n  let profilesId = [];\r\n  let profiles = [];\r\n\r\n  for(var i=0;i<studentProjects.length;i++){\r\n    usersId = [...usersId, studentProjects[i].student];\r\n  }\r\n\r\n  for(var i=0;i<usersId.length;i++){\r\n    [err, profile] = await to(Profile.findOne({belongTo: usersId[i]}));\r\n    profiles.push(profile);\r\n    profilesId.push(profile._id);\r\n  }\r\n\r\n  return [err, profiles, profilesId];\r\n}\r\n\r\nmodule.exports.getStudentsByCoursesId = async (coursesId)=>{\r\n  let err;\r\n  let profiles = [];\r\n  let profilesId = [];\r\n\r\n  [err, profiles] = await to(Profile.find({ joinedCourses: { $in: coursesId } }) );\r\n  for(var i=0;i<profiles.length;i++){\r\n    profilesId = [...profilesId, profiles[i]._id];\r\n  }\r\n\r\n  return [err, profiles, profilesId];\r\n}\r\n\r\nmodule.exports.getTeachersBySchool = async (schoolId)=>{\r\n  let err;\r\n  let profiles = [];\r\n  let profilesId = [];\r\n\r\n  [err, profiles] = await to(Profile.find({ joinedSchools: schoolId }) );\r\n  for(var i=0;i<profiles.length;i++){\r\n    profilesId = [...profilesId, profiles[i]._id];\r\n  }\r\n\r\n  return [err, profiles, profilesId];\r\n}\r\n"]}