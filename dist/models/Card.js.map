{"version":3,"sources":["../../src/models/Card.js"],"names":["ObjectId","mongoose","Schema","Types","cardSchema","studentProject","type","icon","String","required","comment","default","audioComment","grade","author","createdAt","Date","langs","Card","module","exports","model","getByProjects","projects","err","card","studentProjectsId","cardsId","cards","featured","i","length","studentProjects","StudentProject","findById"],"mappings":";;;;AAAA;;;;AACA;;;;AACA;;;;;;;;;;AAEA,IAAIA,WAAWC,mBAASC,MAAT,CAAgBC,KAAhB,CAAsBH,QAArC;AACA,IAAII,aAAaH,mBAASC,MAAT,CAAgB;AAC/BG,kBAAgB;AACdC,UAAMN;AADQ,GADe;AAI/BO,QAAM;AACJD,UAAME,MADF;AAEJC,cAAU;AAFN,GAJyB;AAQ/BC,WAAS;AACPJ,UAAME,MADC;AAEPG,aAAS;AAFF,GARsB;AAY/BC,gBAAc;AACZN,UAAME;AADM,GAZiB;AAe/BK,SAAO;AACLP,UAAME,MADD;AAELG,aAAS;AAFJ,GAfwB;AAmB/BG,UAAQ;AACNR,UAAME,MADA;AAENC,cAAU;AAFJ,GAnBuB;AAuB/BM,aAAW;AACTT,UAAMU,IADG;AAETL,aAAS,IAAIK,IAAJ;AAFA,GAvBoB;AA2B/BC,SAAO,CAACjB,QAAD;AA3BwB,CAAhB,CAAjB;;AA8BA,IAAIkB,OAAOC,OAAOC,OAAP,GAAiBnB,mBAASoB,KAAT,CAAe,MAAf,EAAsBjB,UAAtB,CAA5B;;AAEAe,OAAOC,OAAP,CAAeE,aAAf;AAAA,qEAA+B,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,eADyB,WACpBnB,cADoB,WACJoB,IADI;AAEzBC,6BAFyB,GAEL,EAFK;AAGzBC,mBAHyB,GAGf,EAHe;AAIzBC,iBAJyB,GAIjB,EAJiB;AAKzBC,oBALyB,GAKd,CALc;;;AAO7B,iBAAQC,CAAR,GAAU,CAAV,EAAYA,IAAEP,SAASQ,MAAvB,EAA8BD,GAA9B,EAAkC;AAChCJ,+DAAwBA,iBAAxB,sBAA8CH,SAASO,CAAT,EAAYE,eAA1D;AACD;;AAEOF,aAXqB,GAWnB,CAXmB;;AAAA;AAAA,kBAWjBA,IAAEJ,kBAAkBK,MAXH;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAYG,kBAAGE,yBAAeC,QAAf,CAAwBR,kBAAkBI,CAAlB,CAAxB,CAAH,CAZH;;AAAA;AAAA;AAAA;AAY1BN,eAZ0B;AAYrBnB,0BAZqB;;AAa3BsB,mDAAcA,OAAd,sBAA0BtB,eAAeuB,KAAzC;;AAb2B;AAWUE,eAXV;AAAA;AAAA;;AAAA;AAgBrBA,aAhBqB,GAgBnB,CAhBmB;;AAAA;AAAA,kBAgBjBA,IAAEH,QAAQI,MAhBO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAiBP,kBAAGb,KAAKgB,QAAL,CAAcP,QAAQG,CAAR,CAAd,CAAH,CAjBO;;AAAA;AAAA;AAAA;AAiB1BN,eAjB0B;AAiBrBC,gBAjBqB;;AAkB3BG,iDAAYA,KAAZ,IAAmBH,IAAnB;AACA,gBAAGA,KAAKZ,KAAL,KAAe,UAAlB,EAA6B;AAAEgB;AAAa;;AAnBjB;AAgBAC,eAhBA;AAAA;AAAA;;AAAA;AAAA,6CAsBtB,CAACN,GAAD,EAAMI,KAAN,EAAaD,OAAb,EAAsBE,QAAtB,CAtBsB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAAA;AAAA;AAAA;AAAA","file":"Card.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport StudentProject from './StudentProject';\r\nimport to from'../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar cardSchema = mongoose.Schema({\r\n  studentProject: {\r\n    type: ObjectId\r\n  },\r\n  icon: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  comment: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  audioComment: {\r\n    type: String\r\n  },\r\n  grade: {\r\n    type: String,\r\n    default: 'notGraded'\r\n  },\r\n  author: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  createdAt: {\r\n    type: Date,\r\n    default: new Date()\r\n  },\r\n  langs: [ObjectId]\r\n})\r\n\r\nvar Card = module.exports = mongoose.model('card',cardSchema);\r\n\r\nmodule.exports.getByProjects = async (projects)=>{\r\n  let err, studentProject, card;\r\n  let studentProjectsId = [];\r\n  let cardsId = [];\r\n  let cards = [];\r\n  let featured = 0;\r\n\r\n  for(var i=0;i<projects.length;i++){\r\n    studentProjectsId = [...studentProjectsId, ...projects[i].studentProjects];\r\n  }\r\n\r\n  for(var i=0;i<studentProjectsId.length;i++){\r\n    [err, studentProject] = await to(StudentProject.findById(studentProjectsId[i]));\r\n    cardsId = [...cardsId, ...studentProject.cards];\r\n  }\r\n\r\n  for(var i=0;i<cardsId.length;i++){\r\n    [err, card] = await to(Card.findById(cardsId[i]));\r\n    cards = [...cards, card];\r\n    if(card.grade === 'featured'){ featured++; }\r\n  }\r\n\r\n  return [err, cards, cardsId, featured];\r\n}\r\n"]}