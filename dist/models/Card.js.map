{"version":3,"sources":["../../src/models/Card.js"],"names":["ObjectId","mongoose","Schema","Types","cardSchema","studentProject","type","icon","String","required","comment","default","audioComment","grade","author","createdAt","Date","resubmitted","Boolean","studentRead","langs","likeCount","Number","Card","module","exports","model","getByStudentProjects","studentProjects","err","card","cardsId","cards","featured","i","length","findById","push","getByProjects","projects","studentProjectsId","StudentProject"],"mappings":"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","file":"Card.js","sourcesContent":["import mongoose from 'mongoose';\r\nimport StudentProject from './StudentProject';\r\nimport to from'../to';\r\n\r\nvar ObjectId = mongoose.Schema.Types.ObjectId;\r\nvar cardSchema = mongoose.Schema({\r\n  studentProject: {\r\n    type: ObjectId\r\n  },\r\n  icon: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  comment: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  audioComment: {\r\n    type: String\r\n  },\r\n  grade: {\r\n    type: String,\r\n    default: 'notGraded'\r\n  },\r\n  author: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  createdAt: {\r\n    type: Date\r\n  },\r\n  resubmitted: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  studentRead: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  langs: [ObjectId],\r\n\r\n  likeCount: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\nvar Card = module.exports = mongoose.model('card',cardSchema);\r\n\r\nmodule.exports.getByStudentProjects = async (studentProjects)=>{\r\n  let err, card;\r\n  let cardsId = [];\r\n  let cards = [];\r\n  let featured = 0;\r\n\r\n  for(var i=0;i<studentProjects.length;i++){\r\n    cardsId = [...cardsId, ...studentProjects[i].cards];\r\n  }\r\n\r\n  for(var i=0;i<cardsId.length;i++){\r\n    [err, card] = await to(Card.findById(cardsId[i]));\r\n    cards.push(card);\r\n    if(card.grade === 'featured'){ featured++; }\r\n  }\r\n\r\n  return [err, cards, cardsId, featured];\r\n}\r\n\r\nmodule.exports.getByProjects = async (projects)=>{\r\n  let err, studentProject, card;\r\n  let studentProjectsId = [];\r\n  let cardsId = [];\r\n  let cards = [];\r\n  let featured = 0;\r\n\r\n  for(var i=0;i<projects.length;i++){\r\n    studentProjectsId = [...studentProjectsId, ...projects[i].studentProjects];\r\n  }\r\n\r\n  for(var i=0;i<studentProjectsId.length;i++){\r\n    [err, studentProject] = await to(StudentProject.findById(studentProjectsId[i]));\r\n    cardsId = [...cardsId, ...studentProject.cards];\r\n  }\r\n\r\n  for(var i=0;i<cardsId.length;i++){\r\n    [err, card] = await to(Card.findById(cardsId[i]));\r\n    cards = [...cards, card];\r\n    if(card.grade === 'featured'){ featured++; }\r\n  }\r\n\r\n  return [err, cards, cardsId, featured];\r\n}\r\n"]}