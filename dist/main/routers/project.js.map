{"version":3,"sources":["../../../src/main/routers/project.js"],"names":["ProjectRouter","app","init","mongoose","connect","db","connection","post","req","res","list","body","data","err","project","_projects","i","length","Project","findById","json","result","splice","projects","next","editedProject","findOneAndUpdate","_id","$set","new","console","log","newProject","updatedSubject","create","Subject","subject","$push","cb","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;IAEMA,a;;;AAEJ,yBAAYC,GAAZ,EAAgB;AAAA;;AAAA,8HACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AAAA;;AACJ,UAAMD,MAAM,KAAKA,GAAjB;AACAE,yBAASC,OAAT,CAAiB,2BAAjB;AACA,UAAIC,KAAKF,mBAASG,UAAlB;;AAEAL,UAAIM,IAAJ,CAAS,sBAAT;AAAA,2EAAiC,iBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACzBC,sBADyB,GAClBF,IAAIG,IAAJ,CAASC,IADS;AAE/B;;AACIC,qBAH2B,WAGtBC,OAHsB;AAI3BC,2BAJ2B,GAIf,EAJe;AAKvBC,mBALuB,GAKrB,CALqB;;AAAA;AAAA,wBAKnBA,IAAEN,KAAKO,MALY;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAMN,kBAAGC,kBAAQC,QAAR,CAAiBT,KAAKM,CAAL,CAAjB,CAAH,CANM;;AAAA;AAAA;AAAA;AAM5BH,qBAN4B;AAMvBC,yBANuB;;AAAA,uBAO1BD,GAP0B;AAAA;AAAA;AAAA;;AAAA,mDAObJ,IAAIW,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CAPa;;AAAA;AAQ7BN,4BAAUO,MAAV,CAAiB,CAAjB,EAAmB,CAAnB,EAAqBR,OAArB;;AAR6B;AAKLE,qBALK;AAAA;AAAA;;AAAA;AAAA,mDAUxBP,IAAIW,IAAJ,CAAS;AACdC,4BAAO,SADO;AAEdE,8BAAUR;AAFI,mBAAT,CAVwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAjC;;AAAA;AAAA;AAAA;AAAA;;AAgBAd,UAAIM,IAAJ,CAAS,eAAT;AAAA,4EAA0B,kBAAMC,GAAN,EAAWC,GAAX,EAAgBe,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBV,yBADkB,GACRN,IAAIG,IAAJ,CAASC,IADD;AAExB;;AACIC,qBAHoB,WAGfY,aAHe;AAAA;AAAA,yBAIK,kBAAGP,kBAAQQ,gBAAR,CAAyB,EAACC,KAAKb,QAAQa,GAAd,EAAzB,EAA4C,EAAEC,MAAMd,OAAR,EAA5C,EAA+D,EAAEe,KAAK,IAAP,EAA/D,CAAH,CAJL;;AAAA;AAAA;AAAA;AAIvBhB,qBAJuB;AAIlBY,+BAJkB;AAAA,oDAMjBhB,IAAIW,IAAJ,CAAS;AACdC,4BAAQR,MAAK,QAAL,GAAe,SADT;AAEdY,mCAAeA;AAFD,mBAAT,CANiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA1B;;AAAA;AAAA;AAAA;AAAA;;AAYAxB,UAAIM,IAAJ,CAAS,cAAT;AAAA,4EAAyB,kBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBK,yBADiB,GACPN,IAAIG,IAAJ,CAASC,IADF;;AAEvBkB,0BAAQC,GAAR,CAAYjB,OAAZ;AACID,qBAHmB,WAGdmB,UAHc,WAGFC,cAHE;AAAA;AAAA,yBAIG,kBAAGf,kBAAQgB,MAAR,CAAepB,OAAf,CAAH,CAJH;;AAAA;AAAA;AAAA;AAItBD,qBAJsB;AAIjBmB,4BAJiB;;AAAA,uBAKpBnB,GALoB;AAAA;AAAA;AAAA;;AAAA,oDAKPJ,IAAIW,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CALO;;AAAA;AAAA;AAAA,yBAOO,kBAAGc,kBAAQT,gBAAR,CAAyB,EAACC,KAAKb,QAAQsB,OAAd,EAAzB,EAAiD,EAAEC,OAAO;AACzFd,gCAAUS,WAAWL;AADoE,qBAAT,EAAjD,EAE7B,EAACE,KAAK,IAAN,EAF6B,CAAH,CAPP;;AAAA;AAAA;AAAA;AAOtBhB,qBAPsB;AAOjBoB,gCAPiB;;AAUvB,sBAAGpB,OAAOoB,mBAAmB,IAA7B,EAAkC;AAAEK,uBAAG,QAAH;AAAe;;AAV5B,oDAYhB7B,IAAIW,IAAJ,CAAS;AACdC,4BAAO,SADO;AAEdW,gCAAYA,UAFE;AAGdC,oCAAgBA;AAHF,mBAAT,CAZgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;AAmBD;;;;EA5DyBM,gB;;kBAgEbvC,a","file":"project.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Course from '../../models/Course.js';\r\nimport Project from '../../models/Project.js';\r\nimport Subject from '../../models/Subject.js';\r\n\r\nclass ProjectRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/project/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, project;\r\n      var _projects = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, project] = await to(Project.findById(list[i]));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        _projects.splice(0,0,project);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        projects: _projects\r\n      })\r\n    });\r\n\r\n    app.post('/project/edit', async(req, res, next)=>{\r\n      const project = req.body.data;\r\n      //console.log(data)\r\n      let err, editedProject;\r\n      [err, editedProject] = await to(Project.findOneAndUpdate({_id: project._id},{ $set: project }, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedProject: editedProject\r\n      })\r\n    });\r\n\r\n    app.post('/project/add', async(req, res)=>{\r\n      const project = req.body.data;\r\n      console.log(project);\r\n      let err, newProject, updatedSubject;\r\n      [err, newProject] = await to(Project.create(project))\r\n      if(err){ return res.json({ result: 'failed' })}\r\n\r\n      [err, updatedSubject] = await to(Subject.findOneAndUpdate({_id: project.subject}, { $push: {\r\n        projects: newProject._id\r\n      }}, {new: true}))\r\n      if(err || updatedSubject === null){ cb('failed'); };\r\n\r\n      return res.json({\r\n        result:'success',\r\n        newProject: newProject,\r\n        updatedSubject: updatedSubject\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default ProjectRouter;\r\n"]}