{"version":3,"sources":["../../../src/main/routers/user.js"],"names":["ObjectId","require","Types","UserRouter","app","init","mongoose","connect","db","connection","post","req","res","next","data","body","err","existedUser","User","findOne","id","pw","console","log","json","result","_id","toString","findOneAndUpdate","$set","type","email","new","updatedUser","get","headers","resetPassword","acquireNewAccount","user","profile","othersProfile","course","subject","project","studentProject","school","profiles","Profile","belongTo","push","courses","subjects","joinedCourses","joinedSubjects","today","Date","i","length","Course","findById","teacher","endDate","Subject","teachingCourses","teachingSubjects","teachingCoursesData","find","sort","studentProjects","StudentProject","student","schools","supervisingSchools","School","admin","map","joinedSchools","Router"],"mappings":"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","file":"user.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nvar ObjectId = require('mongoose').Types.ObjectId;\r\n\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Profile from '../../models/Profile.js';\r\nimport School from '../../models/School.js';\r\nimport Course from '../../models/Course.js';\r\nimport Subject from '../../models/Subject.js';\r\nimport Project from '../../models/Project.js';\r\nimport StudentProject from '../../models/StudentProject.js';\r\n\r\nclass UserRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/user/update', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n      let err, existedUser;\r\n      [err, existedUser] = await to(User.findOne({id: data.id, pw: data.pw}));\r\n      if(err){ console.log(err); return res.json({ result: 'failed'})}\r\n      if(existedUser && existedUser._id.toString() !== data._id){ console.log('user id/pw already used'); return res.json({ result: 'failed'}) }\r\n\r\n      User.findOneAndUpdate({_id: data._id}, { $set:{\r\n        type: data.type,\r\n        id: data.id,\r\n        pw: data.pw,\r\n        email: data.email\r\n      }}, {new: true}, (err, updatedUser)=>{\r\n        //console.log(_updatedUser)\r\n        return res.json({\r\n          result: (err || !updatedUser)? 'failed':'success' ,\r\n          updatedUser: updatedUser\r\n        });\r\n      });\r\n    });\r\n\r\n    app.get('/user/resetPassword/', async (req, res, next)=>{\r\n      const email = req.headers.email;\r\n\r\n      User.resetPassword(email, result=>{\r\n        return res.json({ result: result });\r\n      });\r\n    });\r\n\r\n    app.get('/user/getNewAccount/', (req, res, next)=>{\r\n      const email = req.headers.email;\r\n\r\n      User.acquireNewAccount(email, result=>{\r\n        return res.json({ result: result });\r\n      });\r\n    });\r\n\r\n    app.get('/user/login/', async (req, res, next)=>{\r\n      const id = req.headers.id;\r\n      const pw = req.headers.pw;\r\n\r\n      let err, user, profile, othersProfile, course, subject, project, studentProject, school;\r\n      var profiles = [];\r\n\r\n      [err, user] = await to(User.findOne({id, pw}));\r\n      if(err || !user){ console.log(err); console.log(user); return res.json({ result: \"failed\" });}\r\n\r\n      [err, profile] = await to(Profile.findOne({belongTo: user._id}));\r\n      if(err || profile === null){ return res.json({ result: \"failed\" });}\r\n      profiles.push(profile);\r\n\r\n      var courses = [];\r\n      var subjects = [];\r\n\r\n      var joinedCourses = profile.joinedCourses;\r\n      var joinedSubjects = [];\r\n\r\n      const today = new Date();\r\n\r\n      for(var i=0;i<joinedCourses.length;i++){\r\n        [err, course] = await to(Course.findById(joinedCourses[i]));\r\n        if(err || course === null){ return res.json({ result: \"failed\" });}\r\n\r\n        courses.push(course);\r\n\r\n        [err, othersProfile] = await to(Profile.findOne({belongTo: course.teacher}));\r\n        if(err || othersProfile === null){ return res.json({ result: \"failed\" });}\r\n        profiles.push(othersProfile);\r\n\r\n        const endDate = new Date(course.endDate);\r\n        if(endDate < today){ continue; }\r\n        joinedSubjects = [...joinedSubjects, ...course.subjects];\r\n      }\r\n\r\n      for(var i=0;i<joinedSubjects.length;i++){\r\n        [err, subject] = await to(Subject.findById(joinedSubjects[i]._id));\r\n        if(err || subject === null){ return res.json({ result: \"failed\" });}\r\n        subjects.push(subject)\r\n      }\r\n\r\n      var teachingCourses = [];\r\n      var teachingSubjects = [];\r\n\r\n      var teachingCoursesData = [];\r\n      [err, teachingCoursesData] = await to(Course.find({teacher: user._id}, null, {sort: {endDate: 'ascending'}}));\r\n      if(err){ return res.json({ result: \"failed\" });}\r\n      courses = [...courses, ...teachingCoursesData];\r\n\r\n      for(var i=0;i<teachingCoursesData.length;i++){\r\n        teachingCourses.push(teachingCoursesData[i]._id);\r\n        const endDate = new Date(teachingCoursesData[i].endDate);\r\n        if(endDate < today){ continue; }\r\n        teachingSubjects = [...teachingSubjects, ...teachingCoursesData[i].subjects];\r\n      }\r\n\r\n      for(var i=0;i<teachingSubjects.length;i++){\r\n        [err, subject] = await to(Subject.findById(teachingSubjects[i]._id));\r\n        if(err || subject === null){ return res.json({ result: \"failed\" });}\r\n        subjects.push(subject)\r\n      }\r\n\r\n      var studentProjects = [];\r\n      [err, studentProjects] = await to(StudentProject.find({student: user._id}));\r\n\r\n      var schools = [];\r\n      var supervisingSchools = [];\r\n      [err, schools] = await(to(School.find({admin: user._id})));\r\n      if(err || schools === null){ return res.json({ result: \"failed\" });}\r\n      schools.map(school=>{\r\n        supervisingSchools.push(school._id);\r\n        return null;\r\n      });\r\n\r\n      const joinedSchools = profile.joinedSchools;\r\n      for(var i=0;i<joinedSchools.length;i++){\r\n        [err, school] = await to(School.findById(joinedSchools[i]));\r\n        if(err || school === null){ return res.json({ result: \"failed\" });}\r\n        schools.push(school);\r\n      }\r\n\r\n      return res.json({\r\n        result: \"success\",\r\n        user: user,\r\n        profile: profile,\r\n        profiles: profiles,\r\n\r\n        supervisingSchools: supervisingSchools,\r\n\r\n        teachingCourses: teachingCourses,\r\n        joinedCourses: joinedCourses,\r\n\r\n        teachingSubjects: teachingSubjects,\r\n        joinedSubjects: joinedSubjects,\r\n\r\n        schools: schools,\r\n        courses: courses,\r\n        subjects: subjects,\r\n        studentProjects: studentProjects\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default UserRouter;\r\n"]}