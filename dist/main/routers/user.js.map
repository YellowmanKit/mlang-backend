{"version":3,"sources":["../../../src/main/routers/user.js"],"names":["ObjectId","require","Types","UserRouter","app","init","mongoose","connect","db","connection","post","req","res","next","data","body","User","findOneAndUpdate","_id","$set","type","id","pw","email","new","err","updatedUser","json","result","get","headers","resetPassword","acquireNewAccount","user","profile","course","project","findOne","Profile","belongTo","courses","projects","joinedCourses","joinedProjects","today","Date","i","length","Course","findById","endDate","splice","push","j","Project","teachingCourses","teachingProjects","teachingCoursesData","find","teacher","map","k","l","Router"],"mappings":"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","file":"user.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nvar ObjectId = require('mongoose').Types.ObjectId;\r\n\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Profile from '../../models/Profile.js';\r\nimport Course from '../../models/Course.js';\r\nimport Project from '../../models/Project.js';\r\n\r\nclass UserRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/user/update', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n      User.findOneAndUpdate({_id: data._id}, { $set:{\r\n        type: data.type,\r\n        id: data.id,\r\n        pw: data.pw,\r\n        email: data.email\r\n      }}, {new: true}, (err, updatedUser)=>{\r\n        //console.log(_updatedUser)\r\n        return res.json({\r\n          result: (err || !updatedUser)? 'failed':'success' ,\r\n          updatedUser: updatedUser\r\n        });\r\n      });\r\n    });\r\n\r\n    app.get('/user/resetPassword/', async (req, res, next)=>{\r\n      const email = req.headers.email;\r\n\r\n      User.resetPassword(email, result=>{\r\n        return res.json({ result: result });\r\n      });\r\n    });\r\n\r\n    app.get('/user/getNewAccount/', (req, res, next)=>{\r\n      const email = req.headers.email;\r\n\r\n      User.acquireNewAccount(email, result=>{\r\n        return res.json({ result: result });\r\n      });\r\n    });\r\n\r\n    app.get('/user/login/', async (req, res, next)=>{\r\n      const id = req.headers.id;\r\n      const pw = req.headers.pw;\r\n      let err, user, profile, course, project;\r\n\r\n      [err, user] = await to(User.findOne({id, pw}));\r\n      if(err || user === null){ return res.json({ result: \"failed\" });}\r\n\r\n      [err, profile] = await to(Profile.findOne({belongTo: user._id}));\r\n      if(err || profile === null){ return res.json({ result: \"failed\" });}\r\n\r\n      var courses = [];\r\n      var projects = [];\r\n\r\n      var joinedCourses = profile.joinedCourses;\r\n      var joinedProjects = [];\r\n\r\n      const today = new Date();\r\n\r\n      for(var i=0;i<joinedCourses.length;i++){\r\n        [err, course] = await to(Course.findById(joinedCourses[i]));\r\n        if(err || course === null){ return res.json({ result: \"failed\" });}\r\n        const endDate = new Date(course.endDate);\r\n        if(endDate < today){\r\n          joinedCourses.splice(i, 1);\r\n          i--;\r\n          continue;\r\n        }\r\n        courses.push(course);\r\n        joinedProjects = [...joinedProjects, ...course.projects];\r\n      }\r\n\r\n      for(var j=0;j<joinedProjects.length;j++){\r\n        [err, project] = await to(Project.findById(joinedProjects[j]));\r\n        if(err || project === null){ return res.json({ result: \"failed\" });}\r\n        projects.push(project);\r\n      }\r\n\r\n\r\n      var teachingCourses = [];\r\n      var teachingProjects = [];\r\n\r\n      var teachingCoursesData = [];\r\n      [err, teachingCoursesData] = await to(Course.find({teacher: user._id}));\r\n      if(err){ return res.json({ result: \"failed\" });}\r\n      courses = [...courses, ...teachingCoursesData];\r\n      teachingCoursesData.map(course=>{\r\n        const endDate = new Date(course.endDate);\r\n        if(endDate < today){\r\n          return;\r\n        }\r\n        return teachingCourses.push(course._id);\r\n      })\r\n\r\n      for(var k=0;k<teachingCoursesData.length;k++){\r\n        const endDate = new Date(teachingCoursesData[k].endDate);\r\n        if(endDate < today){\r\n          continue;\r\n        }\r\n        teachingProjects = [...teachingProjects, ...teachingCoursesData[k].projects];\r\n      }\r\n\r\n      for(var l=0;l<teachingProjects.length;l++){\r\n        [err, project] = await to(Project.findById(teachingProjects[l]));\r\n        if(err || project === null){ return res.json({ result: \"failed\" });}\r\n        projects.push(project);\r\n      }\r\n\r\n      return res.json({\r\n        result: \"success\",\r\n        user: user,\r\n        profile: profile,\r\n\r\n        teachingCourses: teachingCourses,\r\n        joinedCourses: joinedCourses,\r\n\r\n        teachingProjects: teachingProjects,\r\n        joinedProjects: joinedProjects,\r\n\r\n        courses: courses,\r\n        projects: projects\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default UserRouter;\r\n"]}