{"version":3,"sources":["../../../src/main/routers/subject.js"],"names":["SubjectRouter","app","init","mongoose","connect","db","connection","post","req","res","list","body","data","err","subject","subjects","i","length","Subject","findById","json","result","splice","next","editedSubject","findOneAndUpdate","_id","project","$set","new","console","log","newSubject","updatedCourse","create","Course","course","$push","cb","Router"],"mappings":"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","file":"subject.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Course from '../../models/Course.js';\r\nimport Project from '../../models/Project.js';\r\nimport Subject from '../../models/Subject.js';\r\n\r\nclass SubjectRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/subject/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, subject;\r\n      var subjects = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, subject] = await to(Subject.findById(list[i]));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        subjects.splice(0,0,subject);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        subjects: subjects\r\n      })\r\n    });\r\n\r\n    app.post('/subject/edit', async(req, res, next)=>{\r\n      const subject = req.body.data;\r\n      //console.log(data)\r\n      let err, editedSubject;\r\n      [err, editedSubject] = await to(Subject.findOneAndUpdate({_id: project._id},{ $set: subject }, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedSubject: editedSubject\r\n      })\r\n    });\r\n\r\n    app.post('/subject/add', async(req, res)=>{\r\n      const subject = req.body.data;\r\n      console.log(subject);\r\n      let err, newSubject, updatedCourse;\r\n      [err, newSubject] = await to(Subject.create(subject))\r\n      if(err){ return res.json({ result: 'failed' })}\r\n\r\n      [err, updatedCourse] = await to(Course.findOneAndUpdate({_id: subject.course}, { $push: {\r\n        subjects: newSubject._id\r\n      }}, {new: true}))\r\n      if(err || updatedCourse === null){ cb('failed'); };\r\n\r\n      return res.json({\r\n        result:'success',\r\n        newSubject: newSubject,\r\n        updatedCourse: updatedCourse\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SubjectRouter;\r\n"]}