{"version":3,"sources":["../../../src/main/routers/profile.js"],"names":["ProfileRouter","app","init","post","req","res","next","userId","body","data","err","statistics","Query","getStatisticsByUser","json","result","list","profile","_profiles","i","length","Profile","findOne","belongTo","splice","profiles","findOneAndUpdate","_id","$set","name","newName","description","newDesc","icon","newIcon","new","_updatedProfile","updatedProfile","Router"],"mappings":"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","file":"profile.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Profile from '../../models/Profile.js';\r\nimport Query from '../../functions/Query.js';\r\n\r\nclass ProfileRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n\r\n    app.post('/profile/getStatistics', async(req, res, next)=>{\r\n      const userId = req.body.data;\r\n\r\n      let err, statistics;\r\n      [err, statistics] = await Query.getStatisticsByUser(userId);\r\n      if(err){ return res.json({result: 'failed'})}\r\n      return res.json({result: 'success', statistics: statistics})\r\n\r\n    });\r\n\r\n    app.post('/profile/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      let err, profile;\r\n      var _profiles = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, profile] = await to(Profile.findOne({belongTo: list[i]}));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        _profiles.splice(0,0,profile);\r\n      }\r\n      return res.json({\r\n        result:'success',\r\n        profiles: _profiles\r\n      })\r\n    });\r\n\r\n    app.post('/profile/update', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      Profile.findOneAndUpdate({_id: data.profile._id}, { $set:{\r\n        name: data.newName? data.newName: data.profile.name,\r\n        description: data.newDesc,\r\n        icon: data.newIcon? data.newIcon: data.profile.icon\r\n      }}, {new: true}, (err, _updatedProfile)=>{\r\n        return res.json({\r\n          result: (err || !_updatedProfile)? 'failed':'success' ,\r\n          updatedProfile: _updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default ProfileRouter;\r\n"]}