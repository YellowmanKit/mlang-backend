{"version":3,"sources":["../../../src/main/routers/school.js"],"names":["SchoolRouter","app","init","post","req","res","next","schoolId","body","data","err","statistics","card","Query","getStatisticsBySchool","json","result","list","school","schools","i","length","School","findById","splice","joinedSchool","updatedProfile","joinSchool","editedSchool","findOneAndUpdate","_id","$set","new","addSchool","newSchool","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEMA,Y;;;AAEJ,wBAAYC,GAAZ,EAAgB;AAAA;;AAAA,4HACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AAAA;;AACJ,UAAMD,MAAM,KAAKA,GAAjB;;AAEAA,UAAIE,IAAJ,CAAS,uBAAT;AAAA,2EAAkC,iBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAC1BC,0BAD0B,GACfH,IAAII,IAAJ,CAASC,IADM;AAEhC;;AAEIC,qBAJ4B,WAIvBC,UAJuB,WAIXC,IAJW;AAAA;AAAA,yBAKNC,gBAAMC,qBAAN,CAA4BP,QAA5B,CALM;;AAAA;AAAA;AAAA;AAK/BG,qBAL+B;AAK1BC,4BAL0B;AAAA,mDAazBN,IAAIU,IAAJ,CAAS,EAACC,QAAQN,MAAK,QAAL,GAAe,SAAxB,EAAmCC,YAAYA,UAA/C,EAAT,CAbyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAlC;;AAAA;AAAA;AAAA;AAAA;;AAgBAV,UAAIE,IAAJ,CAAS,qBAAT;AAAA,4EAAgC,kBAAMC,GAAN,EAAWC,GAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AACxBY,sBADwB,GACjBb,IAAII,IAAJ,CAASC,IADQ;AAE9B;;AACIC,qBAH0B,WAGrBQ,MAHqB;AAI1BC,yBAJ0B,GAIhB,EAJgB;AAKtBC,mBALsB,GAKpB,CALoB;;AAAA;AAAA,wBAKlBA,IAAEH,KAAKI,MALW;AAAA;AAAA;AAAA;;AAAA;AAAA,yBAMN,kBAAGC,iBAAOC,QAAP,CAAgBN,KAAKG,CAAL,CAAhB,CAAH,CANM;;AAAA;AAAA;AAAA;AAM3BV,qBAN2B;AAMtBQ,wBANsB;;AAAA,uBAOzBR,GAPyB;AAAA;AAAA;AAAA;;AAAA,oDAOZL,IAAIU,IAAJ,CAAS,EAAEC,QAAQ,QAAV,EAAT,CAPY;;AAAA;AAQ5BG,0BAAQK,MAAR,CAAe,CAAf,EAAiB,CAAjB,EAAmBN,MAAnB;;AAR4B;AAKJE,qBALI;AAAA;AAAA;;AAAA;AAAA,oDAUvBf,IAAIU,IAAJ,CAAS;AACdC,4BAAQN,MAAK,QAAL,GAAe,SADT;AAEdS,6BAASA;AAFK,mBAAT,CAVuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAhC;;AAAA;AAAA;AAAA;AAAA;;AAgBA;;;;;;;;;;;;;AAcAlB,UAAIE,IAAJ,CAAS,cAAT;AAAA,4EAAyB,kBAAOC,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBG,sBADiB,GACVL,IAAII,IAAJ,CAASC,IADC;AAEvB;;AACIC,qBAHmB,WAGde,YAHc,WAGAC,cAHA;AAAA;AAAA,yBAKqBJ,iBAAOK,UAAP,CAAkBlB,IAAlB,CALrB;;AAAA;AAAA;AAAA;AAKtBC,qBALsB;AAKjBe,8BALiB;AAKHC,gCALG;AAAA,oDAOhBrB,IAAIU,IAAJ,CAAS;AACdC,4BAAQN,MAAK,QAAL,GAAe,SADT;AAEde,kCAAcA,YAFA;AAGdC,oCAAgBA;AAHF,mBAAT,CAPgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;;AAeAzB,UAAIE,IAAJ,CAAS,cAAT;AAAA,6EAAyB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBY,wBADiB,GACRd,IAAII,IAAJ,CAASC,IADD;AAEvB;;AACIC,qBAHmB,WAGdkB,YAHc;AAAA;AAAA,yBAIK,kBAAGN,iBAAOO,gBAAP,CAAwB,EAACC,KAAKZ,OAAOY,GAAb,EAAxB,EAA0C,EAAEC,MAAMb,MAAR,EAA1C,EAA2D,EAAEc,KAAK,IAAP,EAA3D,CAAH,CAJL;;AAAA;AAAA;AAAA;AAItBtB,qBAJsB;AAIjBkB,8BAJiB;AAAA,oDAMhBvB,IAAIU,IAAJ,CAAS;AACdC,4BAAQN,MAAK,QAAL,GAAe,SADT;AAEdkB,kCAAcA;AAFA,mBAAT,CANgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;;AAYA3B,UAAIE,IAAJ,CAAS,aAAT;AAAA,6EAAwB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBG,sBADgB,GACTL,IAAII,IAAJ,CAASC,IADA;AAEtB;;AAEAa,mCAAOW,SAAP,CAAiBxB,IAAjB,EAAuB,UAACO,MAAD,EAASkB,SAAT,EAAqB;AAC1C,2BAAO7B,IAAIU,IAAJ,CAAS;AACdC,8BAAQA,MADM;AAEdkB,iCAAWA;AAFG,qBAAT,CAAP;AAID,mBALD;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB;;AAAA;AAAA;AAAA;AAAA;AAYD;;;;EAhGwBC,gB;;kBAoGZnC,Y","file":"school.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Card from '../../models/Card.js';\r\n\r\nimport School from '../../models/School.js';\r\nimport Query from '../../functions/Query.js';\r\n\r\nclass SchoolRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n\r\n    app.post('/school/getStatistics', async(req, res, next)=>{\r\n      const schoolId = req.body.data;\r\n      //console.log(schoolId)\r\n\r\n      let err, statistics, card;\r\n      [err, statistics] = await Query.getStatisticsBySchool(schoolId);\r\n\r\n      /*var cards = statistics.cards;\r\n      for(var i=0;i<cards.length;i++){\r\n        const timestamp = cards[i]._id.getTimestamp();\r\n        [err, card] = await to(Card.findOneAndUpdate({ _id:cards[i]._id }, {$set:{ createdAt: new Date(timestamp) } },{ new: true }));\r\n      }*/\r\n\r\n      return res.json({result: err? 'failed': 'success', statistics: statistics})\r\n    });\r\n\r\n    app.post('/school/getMultiple', async(req, res)=>{\r\n      const list = req.body.data;\r\n      //console.log(list);\r\n      let err, school;\r\n      var schools = [];\r\n      for(var i=0;i<list.length;i++){\r\n        [err, school] = await to(School.findById(list[i]));\r\n        if(err){ return res.json({ result: 'failed' })}\r\n        schools.splice(0,0,school);\r\n      }\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        schools: schools\r\n      })\r\n    });\r\n\r\n    /*app.post('/school/leave', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      School.leaveSchool(data, (result, leavedSchool, updatedProfile, updatedUser)=>{\r\n        return res.json({\r\n          result: result,\r\n          leavedSchool: leavedSchool,\r\n          updatedProfile: updatedProfile,\r\n          updatedUser: updatedUser\r\n        })\r\n      })\r\n    });*/\r\n\r\n    app.post('/school/join', async (req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n      let err, joinedSchool, updatedProfile;\r\n\r\n      [err, joinedSchool, updatedProfile] = await School.joinSchool(data);\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        joinedSchool: joinedSchool,\r\n        updatedProfile: updatedProfile\r\n      });\r\n\r\n    });\r\n\r\n    app.post('/school/edit', async(req, res, next)=>{\r\n      const school = req.body.data;\r\n      //console.log(data)\r\n      let err, editedSchool;\r\n      [err, editedSchool] = await to(School.findOneAndUpdate({_id: school._id},{ $set: school}, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedSchool: editedSchool\r\n      })\r\n    });\r\n\r\n    app.post('/school/add', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      School.addSchool(data, (result, newSchool)=>{\r\n        return res.json({\r\n          result: result,\r\n          newSchool: newSchool\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default SchoolRouter;\r\n"]}