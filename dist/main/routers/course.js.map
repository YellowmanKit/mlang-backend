{"version":3,"sources":["../../../src/main/routers/course.js"],"names":["CourseRouter","app","init","mongoose","connect","db","connection","post","req","res","next","data","body","Course","joinCourse","_result","_joinedCourse","_updatedProfile","json","result","joinedCourse","updatedProfile","course","err","editedCourse","findOneAndUpdate","_id","$set","icon","title","endDate","new","addCourse","_newCourse","newCourse","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;;;;;;;IAEMA,Y;;;AAEJ,wBAAYC,GAAZ,EAAgB;AAAA;;AAAA,4HACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AAAA;;AACJ,UAAMD,MAAM,KAAKA,GAAjB;AACAE,yBAASC,OAAT,CAAiB,2BAAjB;AACA,UAAIC,KAAKF,mBAASG,UAAlB;;AAEAL,UAAIM,IAAJ,CAAS,cAAT;AAAA,2EAAyB,iBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBC,sBADiB,GACVH,IAAII,IAAJ,CAASD,IADC;AAEvB;;AAEAE,mCAAOC,UAAP,CAAkBH,IAAlB,EAAwB,UAACI,OAAD,EAAUC,aAAV,EAAyBC,eAAzB,EAA2C;AACjE,2BAAOR,IAAIS,IAAJ,CAAS;AACdC,8BAAQJ,OADM;AAEdK,oCAAcJ,aAFA;AAGdK,sCAAgBJ;AAHF,qBAAT,CAAP;AAKD,mBAND;;AAJuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;;AAaAhB,UAAIM,IAAJ,CAAS,cAAT;AAAA,4EAAyB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACjBY,wBADiB,GACRd,IAAII,IAAJ,CAASD,IADD;AAEvB;;AACIY,qBAHmB,WAGdC,YAHc;AAAA;AAAA,yBAIK,kBAAGX,iBAAOY,gBAAP,CAAwB,EAACC,KAAKJ,OAAOI,GAAb,EAAxB,EAA0C,EAAEC,MAAM;AAC/EC,4BAAMN,OAAOM,IADkE;AAE/EC,6BAAOP,OAAOO,KAFiE;AAG/EC,+BAASR,OAAOQ;AAH+D,qBAAR,EAA1C,EAI3B,EAAEC,KAAK,IAAP,EAJ2B,CAAH,CAJL;;AAAA;AAAA;AAAA;AAItBR,qBAJsB;AAIjBC,8BAJiB;AAAA,oDAUhBf,IAAIS,IAAJ,CAAS;AACdC,4BAAQI,MAAK,QAAL,GAAe,SADT;AAEdC,kCAAcA;AAFA,mBAAT,CAVgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA;;AAgBAvB,UAAIM,IAAJ,CAAS,aAAT;AAAA,4EAAwB,kBAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,sBADgB,GACTH,IAAII,IAAJ,CAASD,IADA;AAEtB;;AAEAE,mCAAOmB,SAAP,CAAiBrB,IAAjB,EAAuB,UAACI,OAAD,EAAUkB,UAAV,EAAuB;AAC5C,2BAAOxB,IAAIS,IAAJ,CAAS;AACdC,8BAAQJ,OADM;AAEdmB,iCAAWD;AAFG,qBAAT,CAAP;AAID,mBALD;;AAJsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAxB;;AAAA;AAAA;AAAA;AAAA;AAYD;;;;EAtDwBE,gB;;kBA0DZnC,Y","file":"course.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\n\r\nimport User from '../../models/User.js';\r\nimport Course from '../../models/Course.js';\r\n\r\nclass CourseRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    app.post('/course/join', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Course.joinCourse(data, (_result, _joinedCourse, _updatedProfile)=>{\r\n        return res.json({\r\n          result: _result,\r\n          joinedCourse: _joinedCourse,\r\n          updatedProfile: _updatedProfile\r\n        })\r\n      })\r\n    });\r\n\r\n    app.post('/course/edit', async(req, res, next)=>{\r\n      const course = req.body.data;\r\n      //console.log(data)\r\n      let err, editedCourse;\r\n      [err, editedCourse] = await to(Course.findOneAndUpdate({_id: course._id},{ $set: {\r\n        icon: course.icon,\r\n        title: course.title,\r\n        endDate: course.endDate\r\n      }}, { new: true }));\r\n\r\n      return res.json({\r\n        result: err? 'failed': 'success',\r\n        editedCourse: editedCourse\r\n      })\r\n    });\r\n\r\n    app.post('/course/add', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      //console.log(data)\r\n\r\n      Course.addCourse(data, (_result, _newCourse)=>{\r\n        return res.json({\r\n          result: _result,\r\n          newCourse: _newCourse\r\n        })\r\n      })\r\n    });\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default CourseRouter;\r\n"]}