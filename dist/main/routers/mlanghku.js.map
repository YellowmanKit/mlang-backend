{"version":3,"sources":["../../../src/main/routers/mlanghku.js"],"names":["Parse","initialize","process","env","PARSE_APP_ID","DOTNET_KEY","serverURL","PARSE_SERVER","mlanghkuRouter","app","init","mongoose","connect","db","connection","id","pw","err","user","User","logIn","console","log","message","Router"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;AACAA,eAAMC,UAAN,CAAiBC,QAAQC,GAAR,CAAYC,YAA7B,EAA2CF,QAAQC,GAAR,CAAYE,UAAvD;AACAL,eAAMM,SAAN,GAAkBJ,QAAQC,GAAR,CAAYI,YAA9B;;IAEMC,c;;;AAEJ,0BAAYC,GAAZ,EAAgB;AAAA;;AAAA,gIACRA,GADQ;;AAEd,UAAKA,GAAL,GAAWA,GAAX;AACA,UAAKC,IAAL;AAHc;AAIf;;;;2BAEK;AACJ,UAAMD,MAAM,KAAKA,GAAjB;AACAE,yBAASC,OAAT,CAAiB,2BAAjB;AACA,UAAIC,KAAKF,mBAASG,UAAlB;;AAEAd,qBAAMC,UAAN,CAAiBC,QAAQC,GAAR,CAAYC,YAA7B;AACAJ,qBAAMM,SAAN,GAAkBJ,QAAQC,GAAR,CAAYI,YAA9B;;AAEA;;;;;;;AAQD;;;;0FAEWQ,E,EAAIC,E;;;;;;;AACVC,mB,WAAKC,I;;uBACW,kBAAGlB,eAAMmB,IAAN,CAAWC,KAAX,CAAiBL,EAAjB,EAAqBC,EAArB,CAAH,C;;;;;AAAnBC,mB;AAAKC,oB;;qBACHD,G;;;;;AAAMI,wBAAQC,GAAR,CAAYL,IAAIM,OAAhB,E,iCAAiC,CAAC,OAAD,C;;;iDAEnC,CAAC,IAAD,EAAOL,IAAP,C;;;;;;;;;;;;;;;;;;;EA/BkBM,gB;;kBAoCdhB,c","file":"mlanghku.js","sourcesContent":["import Router from './Router';\r\nimport path from 'path';\r\nimport mongoose from 'mongoose';\r\nimport to from '../../to';\r\nimport Parse from 'parse/node';\r\nParse.initialize(process.env.PARSE_APP_ID, process.env.DOTNET_KEY);\r\nParse.serverURL = process.env.PARSE_SERVER;\r\n\r\nclass mlanghkuRouter extends Router {\r\n\r\n  constructor(app){\r\n    super(app);\r\n    this.app = app;\r\n    this.init();\r\n  }\r\n\r\n  init(){\r\n    const app = this.app;\r\n    mongoose.connect('mongodb://localhost/mlang');\r\n    var db = mongoose.connection;\r\n\r\n    Parse.initialize(process.env.PARSE_APP_ID);\r\n    Parse.serverURL = process.env.PARSE_SERVER;\r\n\r\n    /*app.post('/mlanghku/fetchUser', async(req, res, next)=>{\r\n      const data = req.body.data;\r\n      console.log(data);\r\n      res.json({\r\n        result: 'success'\r\n      })\r\n    });*/\r\n\r\n  }\r\n\r\n  async login(id, pw){\r\n    let err, user;\r\n    [err, user] = await to(Parse.User.logIn(id, pw));\r\n    if(err){ console.log(err.message); return ['error']; }\r\n    //console.log(user.attributes);\r\n    return [null, user];\r\n  }\r\n\r\n}\r\n\r\nexport default mlanghkuRouter;\r\n"]}