{"version":3,"sources":["../../src/main/createApp.js"],"names":["CreateApp","appName","port","createApp","temp","path","join","__dirname","storage","storageConfig","multer","diskStorage","destination","req","file","cb","filename","console","log","Date","now","originalname","upload","app","httpsOptions","cert","fs","readFileSync","key","server","https","createServer","use","exposeHeaders","bodyParser","json","limit","urlencoded","extended","express","static","set","AppRouter","UserRouter","ProfileRouter","CourseRouter","ProjectRouter","StudentProjectRouter","CardRouter","LangRouter","listen","address"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;;;;;AAEA;AACA;;IAEMA,S;AAEJ,qBAAYC,OAAZ,EAAoBC,IAApB,EAAyB;AAAA;;AACvB,SAAKC,SAAL,CAAeF,OAAf,EAAuBC,IAAvB;AACD;;;;8BAESD,O,EAAQC,I,EAAK;AACrB,UAAME,OAAOC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,kBAArB,CAAb;AACA,UAAMC,UAAUH,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAhB;;AAEA,UAAIE,gBAAgBC,iBAAOC,WAAP,CAAmB;AACrCC,qBAAa,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,aAAG,IAAH,EAASX,IAAT;AACD,SAHoC;AAIrCY,kBAAU,kBAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjCE,kBAAQC,GAAR,CAAYJ,IAAZ;AACAC,aAAG,IAAH,EAASI,KAAKC,GAAL,KAAa,GAAb,GAAmBN,KAAKO,YAAjC;AACD;AAPoC,OAAnB,CAApB;;AAUA,UAAIC,SAAS,sBAAO,EAAEd,SAASC,aAAX,EAAP,CAAb;;AAEA,UAAMc,MAAM,wBAAZ;AACA,UAAMC,eAAe;AACnBC,cAAMC,aAAGC,YAAH,CAAgBtB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAhB,CADa;AAEnBqB,aAAKF,aAAGC,YAAH,CAAgBtB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+B,YAA/B,CAAhB;AAFc,OAArB;;AAKAgB,UAAIM,MAAJ,GAAaC,gBAAMC,YAAN,CAAmBP,YAAnB,EAAiCD,GAAjC,CAAb;AACAA,UAAIS,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAT,UAAIS,GAAJ,CAAQ,oBAAK,EAACC,eAAe,GAAhB,EAAL,CAAR;AACAV,UAAIS,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB,EAACC,OAAO,MAAR,EAAhB,CAAR;AACAb,UAAIS,GAAJ,CAAQE,qBAAWG,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAf,UAAIS,GAAJ,CAAQO,kBAAQC,MAAR,CAAenC,eAAKC,IAAL,CAAUC,SAAV,EAAoB,WAAWN,OAAX,GAAqB,GAAzC,CAAf,CAAR;;AAEAsB,UAAIkB,GAAJ,CAAQ,MAAR,EAAelC,SAAf;AACAgB,UAAIkB,GAAJ,CAAQ,QAAR,EAAkBhC,aAAlB;AACAc,UAAIkB,GAAJ,CAAQ,QAAR,EAAiBnB,MAAjB;AACAC,UAAIkB,GAAJ,CAAQ,MAAR,EAAerC,IAAf;AACAmB,UAAIkB,GAAJ,CAAQ,SAAR,EAAkBjC,OAAlB;;AAEA,UAAIkC,aAAJ,CAAcnB,GAAd;AACA,UAAIoB,cAAJ,CAAepB,GAAf;AACA,UAAIqB,iBAAJ,CAAkBrB,GAAlB;AACA,UAAIsB,gBAAJ,CAAiBtB,GAAjB;AACA,UAAIuB,iBAAJ,CAAkBvB,GAAlB;AACA,UAAIwB,wBAAJ,CAAyBxB,GAAzB;AACA,UAAIyB,cAAJ,CAAezB,GAAf;AACA,UAAI0B,cAAJ,CAAe1B,GAAf;;AAEAA,UAAIM,MAAJ,CAAWqB,MAAX,CAAkBhD,IAAlB,EAAwB,YAAI;AAACe,gBAAQC,GAAR,CAAY,4BAA4BK,IAAIM,MAAJ,CAAWsB,OAAX,GAAqBjD,IAA7D;AAAoE,OAAjG;AACD;;;;;;kBAKYF,S","file":"createApp.js","sourcesContent":["import https from 'https';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\n\r\nimport AppRouter from './routers/app.js';\r\nimport UserRouter from './routers/user.js';\r\nimport ProfileRouter from './routers/profile.js';\r\nimport CourseRouter from './routers/course.js';\r\nimport ProjectRouter from './routers/project.js';\r\nimport StudentProjectRouter from './routers/studentProject.js';\r\n\r\nimport CardRouter from './routers/card.js';\r\nimport LangRouter from './routers/lang.js';\r\n\r\n//const temp = 'C:/data/temp/';\r\n//const storage = 'C:/data/storage/';\r\n\r\nclass CreateApp {\r\n\r\n  constructor(appName,port){\r\n    this.createApp(appName,port);\r\n  }\r\n\r\n  createApp(appName,port){\r\n    const temp = path.join(__dirname, '../../data/temp/');\r\n    const storage = path.join(__dirname, '../../data/storage/');\r\n\r\n    var storageConfig = multer.diskStorage({\r\n      destination: function (req, file, cb) {\r\n        cb(null, temp);\r\n      },\r\n      filename: function (req, file, cb) {\r\n        console.log(file)\r\n        cb(null, Date.now() + '-' + file.originalname);\r\n      }\r\n    });\r\n\r\n    var upload = multer({ storage: storageConfig })\r\n\r\n    const app = express();\r\n    const httpsOptions = {\r\n      cert: fs.readFileSync(path.join(__dirname, '../ssl', 'server.crt' )),\r\n      key: fs.readFileSync(path.join(__dirname, '../ssl', 'server.key' ))\r\n    }\r\n\r\n    app.server = https.createServer(httpsOptions, app);\r\n    app.use(morgan('dev'));\r\n    app.use(cors({exposeHeaders: \"*\"}));\r\n    app.use(bodyParser.json({limit: '50mb'}));\r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n    app.use(express.static(path.join(__dirname,'../../' + appName + '/')));\r\n\r\n    app.set('root',__dirname);\r\n    app.set('config', storageConfig);\r\n    app.set('upload',upload);\r\n    app.set('temp',temp);\r\n    app.set('storage',storage);\r\n\r\n    new AppRouter(app);\r\n    new UserRouter(app);\r\n    new ProfileRouter(app);\r\n    new CourseRouter(app);\r\n    new ProjectRouter(app);\r\n    new StudentProjectRouter(app);\r\n    new CardRouter(app);\r\n    new LangRouter(app);\r\n\r\n    app.server.listen(port, ()=>{console.log('App is running on port ' + app.server.address().port);});\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default CreateApp;\r\n"]}