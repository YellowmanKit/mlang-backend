{"version":3,"sources":["../../src/main/createApp.js"],"names":["CreateApp","appName","port","useHttps","useUbuntu","devMode","createApp","temp","path","join","__dirname","storage","storageConfig","multer","diskStorage","destination","req","file","cb","filename","console","log","Date","now","originalname","upload","app","httpsOptions","cert","fs","readFileSync","key","ca","passphrase","server","https","createServer","http","use","exposeHeaders","bodyParser","json","limit","urlencoded","extended","express","static","set","mlanghku","mlanghkuRouter","AppRouter","SchoolRouter","UserRouter","ProfileRouter","CourseRouter","ProjectRouter","StudentProjectRouter","CardRouter","LangRouter","SubjectRouter","GroupRouter","SurveyRouter","connectDb","listen","address","uri","mongoose","connect","useNewUrlParser"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AAEA;;;;AAEA;;;;;;;;AAEA;AACA;;IAEMA,S;AAEJ,qBAAYC,OAAZ,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,SAArC,EAAgDC,OAAhD,EAAwD;AAAA;;AACtD,SAAKC,SAAL,CAAeL,OAAf,EAAwBC,IAAxB,EAA8BC,QAA9B,EAAwCC,SAAxC,EAAmDC,OAAnD;AACD;;;;8BAESJ,O,EAASC,I,EAAMC,Q,EAAUC,S,EAAWC,O,EAAQ;AACpD,UAAME,OAAOC,eAAKC,IAAL,CAAUC,SAAV,EAAqB,qBAArB,CAAb;AACA,UAAMC,UAAUH,eAAKC,IAAL,CAAUC,SAAV,EAAqB,wBAArB,CAAhB;;AAEA,UAAIE,gBAAgBC,iBAAOC,WAAP,CAAmB;AACrCC,qBAAa,qBAAUC,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACpCA,aAAG,IAAH,EAASX,IAAT;AACD,SAHoC;AAIrCY,kBAAU,kBAAUH,GAAV,EAAeC,IAAf,EAAqBC,EAArB,EAAyB;AACjCE,kBAAQC,GAAR,CAAYJ,IAAZ;AACAC,aAAG,IAAH,EAASI,KAAKC,GAAL,KAAa,GAAb,GAAmBN,KAAKO,YAAjC;AACD;AAPoC,OAAnB,CAApB;;AAUA,UAAIC,SAAS,sBAAO,EAAEd,SAASC,aAAX,EAAP,CAAb;;AAEA,UAAMc,MAAM,wBAAZ;AACA,UAAGvB,QAAH,EAAY;AACV,YAAMwB,eAAe;AACnBC,gBAAMC,aAAGC,YAAH,CAAgBtB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+BL,UAAS,gBAAT,GAA0B,YAAzD,CAAhB,CADa;AAEnB0B,eAAKF,aAAGC,YAAH,CAAgBtB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAAgCL,UAAS,gBAAT,GAA0B,YAA1D,CAAhB,CAFc;AAGnB2B,cAAIH,aAAGC,YAAH,CAAgBtB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,QAArB,EAA+BL,UAAS,mBAAT,GAA6B,eAA5D,CAAhB,CAHe;AAInB4B,sBAAY;AAJO,SAArB;AAMAP,YAAIQ,MAAJ,GAAaC,gBAAMC,YAAN,CAAmBT,YAAnB,EAAiCD,GAAjC,CAAb;AACD,OARD,MAQK;AACHA,YAAIQ,MAAJ,GAAaG,eAAKD,YAAL,CAAkBV,GAAlB,CAAb;AACD;;AAEDA,UAAIY,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAZ,UAAIY,GAAJ,CAAQ,oBAAK,EAACC,eAAe,GAAhB,EAAL,CAAR;AACAb,UAAIY,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB,EAACC,OAAO,MAAR,EAAhB,CAAR;AACAhB,UAAIY,GAAJ,CAAQE,qBAAWG,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAlB,UAAIY,GAAJ,CAAQO,kBAAQC,MAAR,CAAetC,eAAKC,IAAL,CAAUC,SAAV,EAAoB,WAAWT,OAAX,GAAqB,GAAzC,CAAf,CAAR;;AAEAyB,UAAIqB,GAAJ,CAAQ,MAAR,EAAerC,SAAf;AACAgB,UAAIqB,GAAJ,CAAQ,QAAR,EAAkBnC,aAAlB;AACAc,UAAIqB,GAAJ,CAAQ,QAAR,EAAiBtB,MAAjB;AACAC,UAAIqB,GAAJ,CAAQ,MAAR,EAAexC,IAAf;AACAmB,UAAIqB,GAAJ,CAAQ,SAAR,EAAkBpC,OAAlB;;AAEA,UAAMqC,WAAW,IAAIC,kBAAJ,CAAmBvB,GAAnB,CAAjB;;AAEA,UAAIwB,aAAJ,CAAcxB,GAAd;AACA,UAAIyB,gBAAJ,CAAiBzB,GAAjB;AACA,UAAI0B,cAAJ,CAAe1B,GAAf,EAAoBsB,QAApB;AACA,UAAIK,iBAAJ,CAAkB3B,GAAlB;AACA,UAAI4B,gBAAJ,CAAiB5B,GAAjB;AACA,UAAI6B,iBAAJ,CAAkB7B,GAAlB;AACA,UAAI8B,wBAAJ,CAAyB9B,GAAzB;AACA,UAAI+B,cAAJ,CAAe/B,GAAf;AACA,UAAIgC,cAAJ,CAAehC,GAAf;AACA,UAAIiC,iBAAJ,CAAkBjC,GAAlB;AACA,UAAIkC,eAAJ,CAAgBlC,GAAhB;AACA,UAAImC,gBAAJ,CAAiBnC,GAAjB;;AAEA,WAAKoC,SAAL;AACApC,UAAIQ,MAAJ,CAAW6B,MAAX,CAAkB7D,IAAlB,EAAwB,YAAI;AAACkB,gBAAQC,GAAR,CAAY,4BAA4BK,IAAIQ,MAAJ,CAAW8B,OAAX,GAAqB9D,IAA7D;AAAoE,OAAjG;AACD;;;gCAEU;AACT,UAAM+D,MAAM,2BAAZ;AACAC,yBAASnB,GAAT,CAAa,kBAAb,EAAiC,KAAjC;AACAmB,yBAASC,OAAT,CAAiBF,GAAjB,EAAsB,EAAEG,iBAAiB,IAAnB,EAAtB;AACD;;;;;;kBAKYpE,S","file":"createApp.js","sourcesContent":["import https from 'https';\r\nimport http from 'http';\r\nimport express from 'express';\r\nimport cors from 'cors';\r\nimport morgan from 'morgan';\r\nimport bodyParser from 'body-parser';\r\nimport multer from 'multer';\r\nimport path from 'path';\r\nimport fs from 'fs';\r\nimport mongoose from 'mongoose';\r\n\r\nimport AppRouter from './routers/app.js';\r\nimport SchoolRouter from './routers/school.js';\r\nimport UserRouter from './routers/user.js';\r\nimport ProfileRouter from './routers/profile.js';\r\nimport CourseRouter from './routers/course.js';\r\nimport SubjectRouter from './routers/subject.js';\r\nimport ProjectRouter from './routers/project.js';\r\nimport StudentProjectRouter from './routers/studentProject.js';\r\nimport GroupRouter from './routers/group.js';\r\n\r\nimport CardRouter from './routers/card.js';\r\nimport LangRouter from './routers/lang.js';\r\n\r\nimport SurveyRouter from './routers/survey.js';\r\n\r\nimport mlanghkuRouter from './routers/mlanghku.js';\r\n\r\n//const temp = 'C:/data/temp/';\r\n//const storage = 'C:/data/storage/';\r\n\r\nclass CreateApp {\r\n\r\n  constructor(appName, port, useHttps, useUbuntu, devMode){\r\n    this.createApp(appName, port, useHttps, useUbuntu, devMode);\r\n  }\r\n\r\n  createApp(appName, port, useHttps, useUbuntu, devMode){\r\n    const temp = path.join(__dirname, '../../../data/temp/');\r\n    const storage = path.join(__dirname, '../../../data/storage/');\r\n\r\n    var storageConfig = multer.diskStorage({\r\n      destination: function (req, file, cb) {\r\n        cb(null, temp);\r\n      },\r\n      filename: function (req, file, cb) {\r\n        console.log(file)\r\n        cb(null, Date.now() + '-' + file.originalname);\r\n      }\r\n    });\r\n\r\n    var upload = multer({ storage: storageConfig });\r\n\r\n    const app = express();\r\n    if(useHttps){\r\n      const httpsOptions = {\r\n        cert: fs.readFileSync(path.join(__dirname, '../ssl', devMode? 'dev-server.crt':'server.crt' )),\r\n        key: fs.readFileSync(path.join(__dirname, '../ssl',  devMode? 'dev-server.key':'server.key' )),\r\n        ca: fs.readFileSync(path.join(__dirname, '../ssl', devMode? 'dev-server-ca.crt':'server-ca.crt' )),\r\n        passphrase: 'P@ssw0rd'\r\n      }\r\n      app.server = https.createServer(httpsOptions, app);\r\n    }else{\r\n      app.server = http.createServer(app);\r\n    }\r\n\r\n    app.use(morgan('dev'));\r\n    app.use(cors({exposeHeaders: \"*\"}));\r\n    app.use(bodyParser.json({limit: '50mb'}));\r\n    app.use(bodyParser.urlencoded({extended: false}));\r\n    app.use(express.static(path.join(__dirname,'../../' + appName + '/')));\r\n\r\n    app.set('root',__dirname);\r\n    app.set('config', storageConfig);\r\n    app.set('upload',upload);\r\n    app.set('temp',temp);\r\n    app.set('storage',storage);\r\n\r\n    const mlanghku = new mlanghkuRouter(app);\r\n\r\n    new AppRouter(app);\r\n    new SchoolRouter(app);\r\n    new UserRouter(app, mlanghku);\r\n    new ProfileRouter(app);\r\n    new CourseRouter(app);\r\n    new ProjectRouter(app);\r\n    new StudentProjectRouter(app);\r\n    new CardRouter(app);\r\n    new LangRouter(app);\r\n    new SubjectRouter(app);\r\n    new GroupRouter(app);\r\n    new SurveyRouter(app);\r\n    \r\n    this.connectDb();\r\n    app.server.listen(port, ()=>{console.log('App is running on port ' + app.server.address().port);});\r\n  }\r\n\r\n  connectDb(){\r\n    const uri = 'mongodb://localhost/mlang';\r\n    mongoose.set('useFindAndModify', false);\r\n    mongoose.connect(uri, { useNewUrlParser: true });\r\n  }\r\n\r\n\r\n}\r\n\r\nexport default CreateApp;\r\n"]}